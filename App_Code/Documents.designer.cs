#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mirion.DSD.DosimetryDocs
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="IRV_DosimetryDocs_DEV")]
	public partial class DocumentsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertApplication(Mirion.DSD.DosimetryDocs.Entity.Application instance);
    partial void UpdateApplication(Mirion.DSD.DosimetryDocs.Entity.Application instance);
    partial void DeleteApplication(Mirion.DSD.DosimetryDocs.Entity.Application instance);
    partial void InsertDocumentTag(Mirion.DSD.DosimetryDocs.Entity.DocumentTag instance);
    partial void UpdateDocumentTag(Mirion.DSD.DosimetryDocs.Entity.DocumentTag instance);
    partial void DeleteDocumentTag(Mirion.DSD.DosimetryDocs.Entity.DocumentTag instance);
    partial void InsertUser(Mirion.DSD.DosimetryDocs.Entity.User instance);
    partial void UpdateUser(Mirion.DSD.DosimetryDocs.Entity.User instance);
    partial void DeleteUser(Mirion.DSD.DosimetryDocs.Entity.User instance);
    partial void InsertDocument(Mirion.DSD.DosimetryDocs.Entity.Document instance);
    partial void UpdateDocument(Mirion.DSD.DosimetryDocs.Entity.Document instance);
    partial void DeleteDocument(Mirion.DSD.DosimetryDocs.Entity.Document instance);
    #endregion
		
		public DocumentsDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Mirion.DSD.Docs.DocumentsConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DocumentsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DocumentsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DocumentsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DocumentsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Mirion.DSD.DosimetryDocs.Entity.Application> Applications
		{
			get
			{
				return this.GetTable<Mirion.DSD.DosimetryDocs.Entity.Application>();
			}
		}
		
		public System.Data.Linq.Table<Mirion.DSD.DosimetryDocs.Entity.DocumentTag> DocumentTags
		{
			get
			{
				return this.GetTable<Mirion.DSD.DosimetryDocs.Entity.DocumentTag>();
			}
		}
		
		public System.Data.Linq.Table<Mirion.DSD.DosimetryDocs.Entity.User> Users
		{
			get
			{
				return this.GetTable<Mirion.DSD.DosimetryDocs.Entity.User>();
			}
		}
		
		public System.Data.Linq.Table<Mirion.DSD.DosimetryDocs.Entity.Document> Documents
		{
			get
			{
				return this.GetTable<Mirion.DSD.DosimetryDocs.Entity.Document>();
			}
		}
		
		public System.Data.Linq.Table<Mirion.DSD.DosimetryDocs.Entity.vw_UserDocument> vw_UserDocuments
		{
			get
			{
				return this.GetTable<Mirion.DSD.DosimetryDocs.Entity.vw_UserDocument>();
			}
		}
		
		public System.Data.Linq.Table<Mirion.DSD.DosimetryDocs.Entity.vw_DocUserActivation> vw_DocUserActivations
		{
			get
			{
				return this.GetTable<Mirion.DSD.DosimetryDocs.Entity.vw_DocUserActivation>();
			}
		}
	}
}
namespace Mirion.DSD.DosimetryDocs.Entity
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Applications")]
	public partial class Application : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ApplicationID;
		
		private string _ApplicationName;
		
		private EntitySet<User> _Users;
		
		private EntitySet<Document> _Documents;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIDChanging(int value);
    partial void OnApplicationIDChanged();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    #endregion
		
		public Application()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			this._Documents = new EntitySet<Document>(new Action<Document>(this.attach_Documents), new Action<Document>(this.detach_Documents));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					this.OnApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationID = value;
					this.SendPropertyChanged("ApplicationID");
					this.OnApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_User", Storage="_Users", ThisKey="ApplicationID", OtherKey="ApplicationID")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_Document", Storage="_Documents", ThisKey="ApplicationID", OtherKey="ApplicationID")]
		public EntitySet<Document> Documents
		{
			get
			{
				return this._Documents;
			}
			set
			{
				this._Documents.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Application = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Application = null;
		}
		
		private void attach_Documents(Document entity)
		{
			this.SendPropertyChanging();
			entity.Application = this;
		}
		
		private void detach_Documents(Document entity)
		{
			this.SendPropertyChanging();
			entity.Application = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentTags")]
	public partial class DocumentTag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocumentID;
		
		private string _Tag;
		
		private EntityRef<Document> _Document;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocumentIDChanging(int value);
    partial void OnDocumentIDChanged();
    partial void OnTagChanging(string value);
    partial void OnTagChanged();
    #endregion
		
		public DocumentTag()
		{
			this._Document = default(EntityRef<Document>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DocumentID
		{
			get
			{
				return this._DocumentID;
			}
			set
			{
				if ((this._DocumentID != value))
				{
					if (this._Document.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentID = value;
					this.SendPropertyChanged("DocumentID");
					this.OnDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tag", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Tag
		{
			get
			{
				return this._Tag;
			}
			set
			{
				if ((this._Tag != value))
				{
					this.OnTagChanging(value);
					this.SendPropertyChanging();
					this._Tag = value;
					this.SendPropertyChanged("Tag");
					this.OnTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_DocumentTag", Storage="_Document", ThisKey="DocumentID", OtherKey="DocumentID", IsForeignKey=true)]
		public Document Document
		{
			get
			{
				return this._Document.Entity;
			}
			set
			{
				Document previousValue = this._Document.Entity;
				if (((previousValue != value) 
							|| (this._Document.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Document.Entity = null;
						previousValue.DocumentTags.Remove(this);
					}
					this._Document.Entity = value;
					if ((value != null))
					{
						value.DocumentTags.Add(this);
						this._DocumentID = value.DocumentID;
					}
					else
					{
						this._DocumentID = default(int);
					}
					this.SendPropertyChanged("Document");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _UserName;
		
		private string _Account;
		
		private int _ApplicationID;
		
		private bool _Active;
		
		private System.DateTime _CreatedDate;
		
		private string _CreatedBy;
		
		private bool _AcceptsEmails;
		
		private EntityRef<Application> _Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    partial void OnApplicationIDChanging(int value);
    partial void OnApplicationIDChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnAcceptsEmailsChanging(bool value);
    partial void OnAcceptsEmailsChanged();
    #endregion
		
		public User()
		{
			this._Application = default(EntityRef<Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this.OnAccountChanging(value);
					this.SendPropertyChanging();
					this._Account = value;
					this.SendPropertyChanged("Account");
					this.OnAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="Int NOT NULL")]
		public int ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					if (this._Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationID = value;
					this.SendPropertyChanged("ApplicationID");
					this.OnApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcceptsEmails", DbType="Bit NOT NULL")]
		public bool AcceptsEmails
		{
			get
			{
				return this._AcceptsEmails;
			}
			set
			{
				if ((this._AcceptsEmails != value))
				{
					this.OnAcceptsEmailsChanging(value);
					this.SendPropertyChanging();
					this._AcceptsEmails = value;
					this.SendPropertyChanged("AcceptsEmails");
					this.OnAcceptsEmailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_User", Storage="_Application", ThisKey="ApplicationID", OtherKey="ApplicationID", IsForeignKey=true)]
		public Application Application
		{
			get
			{
				return this._Application.Entity;
			}
			set
			{
				Application previousValue = this._Application.Entity;
				if (((previousValue != value) 
							|| (this._Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Application.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Application.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._ApplicationID = value.ApplicationID;
					}
					else
					{
						this._ApplicationID = default(int);
					}
					this.SendPropertyChanged("Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Documents")]
	public partial class Document : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocumentID;
		
		private System.Guid _DocumentGuid;
		
		private string _FileName;
		
		private string _DocumentTitle;
		
		private string _DocumentDesc;
		
		private System.Data.Linq.Binary _DocumentContent;
		
		private int _ApplicationID;
		
		private string _Account;
		
		private string _Category;
		
		private string _ContentType;
		
		private System.Nullable<System.DateTime> _ExpirationDate;
		
		private bool _Active;
		
		private System.Nullable<int> _ParentDocumentID;
		
		private System.Nullable<System.DateTime> _PublishedDate;
		
		private string _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private string _ReviewedBy;
		
		private System.Nullable<System.DateTime> _ReviewedDate;
		
		private string _InternalNotes;
		
		private EntitySet<DocumentTag> _DocumentTags;
		
		private EntitySet<Document> _Documents;
		
		private EntityRef<Application> _Application;
		
		private EntityRef<Document> _Document1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocumentIDChanging(int value);
    partial void OnDocumentIDChanged();
    partial void OnDocumentGuidChanging(System.Guid value);
    partial void OnDocumentGuidChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnDocumentTitleChanging(string value);
    partial void OnDocumentTitleChanged();
    partial void OnDocumentDescChanging(string value);
    partial void OnDocumentDescChanged();
    partial void OnDocumentContentChanging(System.Data.Linq.Binary value);
    partial void OnDocumentContentChanged();
    partial void OnApplicationIDChanging(int value);
    partial void OnApplicationIDChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnContentTypeChanging(string value);
    partial void OnContentTypeChanged();
    partial void OnExpirationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpirationDateChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnParentDocumentIDChanging(System.Nullable<int> value);
    partial void OnParentDocumentIDChanged();
    partial void OnPublishedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPublishedDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnReviewedByChanging(string value);
    partial void OnReviewedByChanged();
    partial void OnReviewedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReviewedDateChanged();
    partial void OnInternalNotesChanging(string value);
    partial void OnInternalNotesChanged();
    #endregion
		
		public Document()
		{
			this._DocumentTags = new EntitySet<DocumentTag>(new Action<DocumentTag>(this.attach_DocumentTags), new Action<DocumentTag>(this.detach_DocumentTags));
			this._Documents = new EntitySet<Document>(new Action<Document>(this.attach_Documents), new Action<Document>(this.detach_Documents));
			this._Application = default(EntityRef<Application>);
			this._Document1 = default(EntityRef<Document>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DocumentID
		{
			get
			{
				return this._DocumentID;
			}
			set
			{
				if ((this._DocumentID != value))
				{
					this.OnDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentID = value;
					this.SendPropertyChanged("DocumentID");
					this.OnDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DocumentGuid
		{
			get
			{
				return this._DocumentGuid;
			}
			set
			{
				if ((this._DocumentGuid != value))
				{
					this.OnDocumentGuidChanging(value);
					this.SendPropertyChanging();
					this._DocumentGuid = value;
					this.SendPropertyChanged("DocumentGuid");
					this.OnDocumentGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentTitle", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DocumentTitle
		{
			get
			{
				return this._DocumentTitle;
			}
			set
			{
				if ((this._DocumentTitle != value))
				{
					this.OnDocumentTitleChanging(value);
					this.SendPropertyChanging();
					this._DocumentTitle = value;
					this.SendPropertyChanged("DocumentTitle");
					this.OnDocumentTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentDesc", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DocumentDesc
		{
			get
			{
				return this._DocumentDesc;
			}
			set
			{
				if ((this._DocumentDesc != value))
				{
					this.OnDocumentDescChanging(value);
					this.SendPropertyChanging();
					this._DocumentDesc = value;
					this.SendPropertyChanged("DocumentDesc");
					this.OnDocumentDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentContent", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary DocumentContent
		{
			get
			{
				return this._DocumentContent;
			}
			set
			{
				if ((this._DocumentContent != value))
				{
					this.OnDocumentContentChanging(value);
					this.SendPropertyChanging();
					this._DocumentContent = value;
					this.SendPropertyChanged("DocumentContent");
					this.OnDocumentContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="Int NOT NULL")]
		public int ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					if (this._Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationID = value;
					this.SendPropertyChanged("ApplicationID");
					this.OnApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this.OnAccountChanging(value);
					this.SendPropertyChanging();
					this._Account = value;
					this.SendPropertyChanged("Account");
					this.OnAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentType", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ContentType
		{
			get
			{
				return this._ContentType;
			}
			set
			{
				if ((this._ContentType != value))
				{
					this.OnContentTypeChanging(value);
					this.SendPropertyChanging();
					this._ContentType = value;
					this.SendPropertyChanged("ContentType");
					this.OnContentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpirationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpirationDate
		{
			get
			{
				return this._ExpirationDate;
			}
			set
			{
				if ((this._ExpirationDate != value))
				{
					this.OnExpirationDateChanging(value);
					this.SendPropertyChanging();
					this._ExpirationDate = value;
					this.SendPropertyChanged("ExpirationDate");
					this.OnExpirationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentDocumentID", DbType="Int")]
		public System.Nullable<int> ParentDocumentID
		{
			get
			{
				return this._ParentDocumentID;
			}
			set
			{
				if ((this._ParentDocumentID != value))
				{
					if (this._Document1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentDocumentID = value;
					this.SendPropertyChanged("ParentDocumentID");
					this.OnParentDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishedDate
		{
			get
			{
				return this._PublishedDate;
			}
			set
			{
				if ((this._PublishedDate != value))
				{
					this.OnPublishedDateChanging(value);
					this.SendPropertyChanging();
					this._PublishedDate = value;
					this.SendPropertyChanged("PublishedDate");
					this.OnPublishedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReviewedBy", DbType="NVarChar(50)")]
		public string ReviewedBy
		{
			get
			{
				return this._ReviewedBy;
			}
			set
			{
				if ((this._ReviewedBy != value))
				{
					this.OnReviewedByChanging(value);
					this.SendPropertyChanging();
					this._ReviewedBy = value;
					this.SendPropertyChanged("ReviewedBy");
					this.OnReviewedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReviewedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReviewedDate
		{
			get
			{
				return this._ReviewedDate;
			}
			set
			{
				if ((this._ReviewedDate != value))
				{
					this.OnReviewedDateChanging(value);
					this.SendPropertyChanging();
					this._ReviewedDate = value;
					this.SendPropertyChanged("ReviewedDate");
					this.OnReviewedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternalNotes", DbType="NVarChar(MAX)")]
		public string InternalNotes
		{
			get
			{
				return this._InternalNotes;
			}
			set
			{
				if ((this._InternalNotes != value))
				{
					this.OnInternalNotesChanging(value);
					this.SendPropertyChanging();
					this._InternalNotes = value;
					this.SendPropertyChanged("InternalNotes");
					this.OnInternalNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_DocumentTag", Storage="_DocumentTags", ThisKey="DocumentID", OtherKey="DocumentID")]
		public EntitySet<DocumentTag> DocumentTags
		{
			get
			{
				return this._DocumentTags;
			}
			set
			{
				this._DocumentTags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_Document", Storage="_Documents", ThisKey="DocumentID", OtherKey="ParentDocumentID")]
		public EntitySet<Document> Documents
		{
			get
			{
				return this._Documents;
			}
			set
			{
				this._Documents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_Document", Storage="_Application", ThisKey="ApplicationID", OtherKey="ApplicationID", IsForeignKey=true)]
		public Application Application
		{
			get
			{
				return this._Application.Entity;
			}
			set
			{
				Application previousValue = this._Application.Entity;
				if (((previousValue != value) 
							|| (this._Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Application.Entity = null;
						previousValue.Documents.Remove(this);
					}
					this._Application.Entity = value;
					if ((value != null))
					{
						value.Documents.Add(this);
						this._ApplicationID = value.ApplicationID;
					}
					else
					{
						this._ApplicationID = default(int);
					}
					this.SendPropertyChanged("Application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Document_Document", Storage="_Document1", ThisKey="ParentDocumentID", OtherKey="DocumentID", IsForeignKey=true)]
		public Document Document1
		{
			get
			{
				return this._Document1.Entity;
			}
			set
			{
				Document previousValue = this._Document1.Entity;
				if (((previousValue != value) 
							|| (this._Document1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Document1.Entity = null;
						previousValue.Documents.Remove(this);
					}
					this._Document1.Entity = value;
					if ((value != null))
					{
						value.Documents.Add(this);
						this._ParentDocumentID = value.DocumentID;
					}
					else
					{
						this._ParentDocumentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Document1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DocumentTags(DocumentTag entity)
		{
			this.SendPropertyChanging();
			entity.Document = this;
		}
		
		private void detach_DocumentTags(DocumentTag entity)
		{
			this.SendPropertyChanging();
			entity.Document = null;
		}
		
		private void attach_Documents(Document entity)
		{
			this.SendPropertyChanging();
			entity.Document1 = this;
		}
		
		private void detach_Documents(Document entity)
		{
			this.SendPropertyChanging();
			entity.Document1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_UserDocuments")]
	public partial class vw_UserDocument
	{
		
		private string _UserName;
		
		private int _ApplicationID;
		
		private string _ApplicationName;
		
		private string _Account;
		
		private int _DocumentID;
		
		private System.Guid _DocumentGuid;
		
		private string _FileName;
		
		private string _DocumentTitle;
		
		private string _DocumentDesc;
		
		private string _Category;
		
		private System.Nullable<System.DateTime> _PublishedDate;
		
		private System.Nullable<System.DateTime> _ExpirationDate;
		
		public vw_UserDocument()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="Int NOT NULL")]
		public int ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					this._ApplicationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this._ApplicationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this._Account = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentID", DbType="Int NOT NULL")]
		public int DocumentID
		{
			get
			{
				return this._DocumentID;
			}
			set
			{
				if ((this._DocumentID != value))
				{
					this._DocumentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DocumentGuid
		{
			get
			{
				return this._DocumentGuid;
			}
			set
			{
				if ((this._DocumentGuid != value))
				{
					this._DocumentGuid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this._FileName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentTitle", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DocumentTitle
		{
			get
			{
				return this._DocumentTitle;
			}
			set
			{
				if ((this._DocumentTitle != value))
				{
					this._DocumentTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentDesc", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DocumentDesc
		{
			get
			{
				return this._DocumentDesc;
			}
			set
			{
				if ((this._DocumentDesc != value))
				{
					this._DocumentDesc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(30)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this._Category = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishedDate
		{
			get
			{
				return this._PublishedDate;
			}
			set
			{
				if ((this._PublishedDate != value))
				{
					this._PublishedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpirationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpirationDate
		{
			get
			{
				return this._ExpirationDate;
			}
			set
			{
				if ((this._ExpirationDate != value))
				{
					this._ExpirationDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_DocUserActivations")]
	public partial class vw_DocUserActivation
	{
		
		private string _ApplicationName;
		
		private string _Account;
		
		private System.Nullable<int> _Documents;
		
		private System.Nullable<int> _TotalUsers;
		
		private System.Nullable<int> _ActivatedUsers;
		
		private System.Nullable<System.DateTime> _FirstDocumentAdded;
		
		private System.Nullable<System.DateTime> _LastDocumentAdded;
		
		public vw_DocUserActivation()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this._ApplicationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this._Account = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Documents", DbType="Int")]
		public System.Nullable<int> Documents
		{
			get
			{
				return this._Documents;
			}
			set
			{
				if ((this._Documents != value))
				{
					this._Documents = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalUsers", DbType="Int")]
		public System.Nullable<int> TotalUsers
		{
			get
			{
				return this._TotalUsers;
			}
			set
			{
				if ((this._TotalUsers != value))
				{
					this._TotalUsers = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivatedUsers", DbType="Int")]
		public System.Nullable<int> ActivatedUsers
		{
			get
			{
				return this._ActivatedUsers;
			}
			set
			{
				if ((this._ActivatedUsers != value))
				{
					this._ActivatedUsers = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstDocumentAdded", DbType="Date")]
		public System.Nullable<System.DateTime> FirstDocumentAdded
		{
			get
			{
				return this._FirstDocumentAdded;
			}
			set
			{
				if ((this._FirstDocumentAdded != value))
				{
					this._FirstDocumentAdded = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastDocumentAdded", DbType="Date")]
		public System.Nullable<System.DateTime> LastDocumentAdded
		{
			get
			{
				return this._LastDocumentAdded;
			}
			set
			{
				if ((this._LastDocumentAdded != value))
				{
					this._LastDocumentAdded = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
