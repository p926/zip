using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

/// <summary>
/// Handle error messages and responses from the Instadose APIs
/// </summary>
public static class APIHandlers
{
    /// <summary>
    /// Display an error message that corresponds to the response code.
    /// </summary>
    /// <param name="responseCode"></param>
    /// <returns></returns>
    public static string GetErrorMessage(int responseCode)
    {
        switch (responseCode)
        {
            case -1: return "Unknown Error (Usually a data related issue)";
            case 0: return "No Error";
            case 10000: return "Session was not passed";
            case 10001: return "Session is not valid";
            case 10002: return "Application is not allowed or could not be validated. Check Application ID and Key.";
            case 10003: return "Username and password combination do not match.";
            case 10004: return "User or account is no longer active.";
            case 20209: return "Billing method is required.";
            case 20210: return "Must be an account admninistrator to edit billing information.";
            case 20211: return "Invalid billing method.";
            case 20212: return "Name of the credit card holder is required.";
            case 20213: return "The credit card security code is required.";
            case 20214: return "The credit card security code is too short.";
            case 20215: return "The credit card security code is too long.";
            case 20216: return "The credit card number is required.";
            case 20217: return "Invalid credit card expiration month range.";
            case 20218: return "Invalid credit card expiration year range.";
            case 20219: return "The credit card is expired.";
            case 20220: return "The credit card number is not valid.";
            case 20221: return "A PO number is required.";
            case 30207: return "Location ID is required.";
            case 30208: return "Location does not exist or belong to this account.";
            case 30209: return "Must be an administrator to create a location.";
            case 30210: return "Location name is required.";
            case 30211: return "Location name is too long.";
            case 30212: return "Location name is too short.";
            case 30213: return "Telephone number is required.";
            case 30214: return "Telephone number is too long.";
            case 30215: return "Fax number is too long.";
            case 30216: return "Company is too long.";
            case 30217: return "Location code is too long.";
            case 30218: return "Dose unit of measure is required.";
            case 30219: return "Invalid dose unit of measure.";
            case 30220: return "Administrator user ID is required.";
            case 30221: return "Billing country code must be 3 characters.";
            case 30222: return "Billing name prefix is too long.";
            case 30223: return "Billing first name is required.";
            case 30224: return "Billing first name is too long.";
            case 30225: return "Billing last name is required.";
            case 30226: return "Billing last name is too long.";
            case 30227: return "Billing telephone number is required.";
            case 30228: return "Billing telephone number is too long.";
            case 30229: return "Billing fax number is too long.";
            case 30230: return "Billing address line 1 is required.";
            case 30231: return "Billing address line 1 is too long.";
            case 30232: return "Billing address line 2 is too long.";
            case 30233: return "Billing address line 3 is too long.";
            case 30234: return "Billing city is required.";
            case 30235: return "Billing city is too long.";
            case 30236: return "Billing state code is required.";
            case 30237: return "Billing state code is too long.";
            case 30238: return "Billing postal code is required.";
            case 30239: return "Billing postal code is too long.";
            case 30240: return "Billing country code is required.";
            case 30251: return "Shipping name prefix is too long.";
            case 30252: return "Shipping first name is required.";
            case 30253: return "Shipping first name is too long.";
            case 30254: return "Shipping last name is required.";
            case 30255: return "Shipping last name is too long.";
            case 30256: return "Shipping telephone number is required.";
            case 30257: return "Shipping telephone number is too long.";
            case 30258: return "Shipping fax number is too long.";
            case 30259: return "Shipping address line 1 is required.";
            case 30260: return "Shipping address line 1 is too long.";
            case 30261: return "Shipping address line 2 is too long.";
            case 30262: return "Shipping address line 3 is too long.";
            case 30263: return "Shipping city is required.";
            case 30264: return "Shipping city is too long.";
            case 30265: return "Shipping state is required.";
            case 30266: return "Shipping state is too long.";
            case 30267: return "Shipping postal code is required.";
            case 30268: return "Shipping postal code is too long.";
            case 30269: return "Shipping country code is required.";
            case 30270: return "Shipping country code must be 3 characters.";
            case 30280: return "Administrator does not exist or belong to this account";
            case 30281: return "Administrator must be at least a LocationAdmin.";
            case 30282: return "Billing state code was not found.";
            case 30283: return "Billing country code was not found.";
            case 30284: return "Shipping state code was not found.";
            case 30285: return "Shipping country code was not found.";
            case 30286: return "Location names must be unique.";
            case 30309: return "Must be an administrator to create a location.";
            case 30310: return "Location name is required.";
            case 30311: return "Location name is too long.";
            case 30312: return "Location name is too short.";
            case 30313: return "Telephone number is required.";
            case 30314: return "Telephone number is too long.";
            case 30315: return "Fax number is too long.";
            case 30316: return "Company is too long.";
            case 30317: return "Location code is too long.";
            case 30318: return "Dose unit of measure is required.";
            case 30319: return "Invalid dose unit of measure.";
            case 30320: return "Administrator user ID is required.";
            case 30321: return "Billing country code must be 3 characters.";
            case 30322: return "Billing name prefix is too long.";
            case 30323: return "Billing first name is required.";
            case 30324: return "Billing first name is too long.";
            case 30325: return "Billing last name is required.";
            case 30326: return "Billing last name is too long.";
            case 30327: return "Billing telephone number is required.";
            case 30328: return "Billing telephone number is too long.";
            case 30329: return "Billing fax number is too long.";
            case 30330: return "Billing address line 1 is required.";
            case 30331: return "Billing address line 1 is too long.";
            case 30332: return "Billing address line 2 is too long.";
            case 30333: return "Billing address line 3 is too long.";
            case 30334: return "Billing city is required.";
            case 30335: return "Billing city is too long.";
            case 30336: return "Billing state code is required.";
            case 30337: return "Billing state code is too long.";
            case 30338: return "Billing postal code is required.";
            case 30339: return "Billing postal code is too long.";
            case 30340: return "Billing country code is required.";
            case 30351: return "Shipping name prefix is too long.";
            case 30352: return "Shipping first name is required.";
            case 30353: return "Shipping first name is too long.";
            case 30354: return "Shipping last name is required.";
            case 30355: return "Shipping last name is too long.";
            case 30356: return "Shipping telephone number is required.";
            case 30357: return "Shipping telephone number is too long.";
            case 30358: return "Shipping fax number is too long.";
            case 30359: return "Shipping address line 1 is required.";
            case 30360: return "Shipping address line 1 is too long.";
            case 30361: return "Shipping address line 2 is too long.";
            case 30362: return "Shipping address line 3 is too long.";
            case 30363: return "Shipping city is required.";
            case 30364: return "Shipping city is too long.";
            case 30365: return "Shipping state is required.";
            case 30366: return "Shipping state is too long.";
            case 30367: return "Shipping postal code is required.";
            case 30368: return "Shipping postal code is too long.";
            case 30369: return "Shipping country code is required.";
            case 30370: return "Shipping country code must be 3 characters.";
            case 30380: return "Administrator does not exist or belong to this account";
            case 30381: return "Administrator must be at least a LocationAdmin.";
            case 30382: return "Billing state code was not found.";
            case 30383: return "Billing country code was not found.";
            case 30384: return "Shipping state code was not found.";
            case 30385: return "Shipping country code was not found.";
            case 30386: return "Location names must be unique.";
            case 40001: return "User does not have access to this group.";
            case 40002: return "Group does not exist.";
            case 40101: return "User does not have access to this location.";
            case 40207: return "Group ID is required.";
            case 40208: return "The location provided does not exist or belong to this account.";
            case 40209: return "Must at least be a group administrator to update a group.";
            case 40210: return "Group name is required.";
            case 40211: return "Group name is too long.";
            case 40212: return "Group name is too short.";
            case 40213: return "Administrator user ID is required.";
            case 40214: return "Administrator does not exist or belong to this account";
            case 40215: return "Administrator must be at least a GroupAdmin.";
            case 40216: return "Group name must be unique.";
            case 40308: return "The location provided does not exist or belong to this account.";
            case 40309: return "Must at least be a location administrator to add a group.";
            case 40310: return "Group name is required.";
            case 40311: return "Group name is too long.";
            case 40312: return "Group name is too short.";
            case 40313: return "Administrator user ID is required.";
            case 40314: return "Administrator does not exist or belong to this account";
            case 40315: return "Administrator must be at least a GroupAdmin.";
            case 40316: return "Group name must be unique.";
            case 50001: return "Access denied to this user.";
            case 50002: return "User was not found";
            case 50101: return "User does not have access to this group.";
            case 50102: return "User does not have access to this location.";
            case 50103: return "User must be an administrator to view all user.";
            case 50200: return "User ID is required.";
            case 50201: return "Access denied to update this user.";
            case 50202: return "User was not found.";
            case 50210: return "Username is too small.";
            case 50211: return "Username is too long.";
            case 50212: return "Username is not available.";
            case 50213: return "Username cannot contain special characters unless it is an email";
            case 50214: return "The email address is too long.";
            case 50215: return "The email address is not valid.";
            case 50216: return "The prefix is too long.";
            case 50217: return "The fax number is too long.";
            case 50218: return "The telephone number is too long.";
            case 50219: return "Invalid type for gender.";
            case 50220: return "This user does not have permission to change to this group ID.";
            case 50221: return "The user does not have permission to change to this location ID.";
            case 50222: return "The security type was not found.";
            case 50223: return "Cannot set a user to a higher security type than yourself.";
            case 50224: return "The security type was not found.";
            case 50310: return "The first name cannot be blank.";
            case 50311: return "The first name is too long.";
            case 50312: return "The last name cannot be blank.";
            case 50313: return "The last name is too long.";
            case 50314: return "The username cannot be blank.";
            case 50315: return "The username is too small.";
            case 50316: return "The username is too long.";
            case 50317: return "The username is not available. ";
            case 50318: return "The email address is required.";
            case 50319: return "The email address is too long.";
            case 50320: return "The password is required.";
            case 50321: return "The password does not meet the minimum security requirements.";
            case 50322: return "The password is too long.";
            case 50323: return "The identification number is too long.";
            case 50324: return "The identification type is too long.";
            case 50325: return "The identification number requires a type.";
            case 50326: return "The telephone number is required.";
            case 50327: return "The telephone number is too long.";
            case 50328: return "The security type is required.";
            case 50329: return "Invalid type for gender.";
            case 50330: return "Invalid type for security type.";
            case 50331: return "Cannot create a user with a higher security type than yourself.";
            case 50332: return "Cannot add a user to this location.";
            case 50333: return "Cannot add a user to this group.";
            case 50334: return "The security type was not found.";
            case 50335: return "Username cannot contain special characters unless it is an email";
            case 50336: return "The email address is not valid.";
            case 50337: return "You do not have permission to add users.";
            case 50338: return "The prefix is too long.";
            case 50339: return "Fax number is too long.";
            case 50410: return "The password cannot be blank.";
            case 50411: return "The password does not meet the minimum security requirements.";
            case 50412: return "The password is too long.";
            case 50501: return "Access denied to reset this user's password.";
            case 60001: return "Device is not available to this user.";
            case 60002: return "Device does not belong to this account or exist.";
            case 60110: return "You do not have permission to view this location.";
            case 60111: return "Unknown filter parameter entered.";
            case 60210: return "Security type is invalid to assign badges.";
            case 60211: return "User does not have access to this device.";
            case 60212: return "User does not have access to this user.";
            case 60213: return "Device does not exist or belong to this account.";
            case 60214: return "The device is already assigned to someone.";
            case 60215: return "The user was not found.";
            case 60216: return "Body region was not understood.";
            case 60217: return "This user already has a primary device.";
            case 60218: return "Cannot assign multiple badges to the same region.";
            case 60310: return "Security type is invalid to unassign badges.";
            case 60311: return "User does not have access to this device.";
            case 60312: return "User does not have access to this user.";
            case 60313: return "Device is not assigned to anyone.";
            case 60314: return "The user was not found.";
            case 60409: return "You do not have permission to assign.";
            case 60410: return "This account cannot assign devices to a location or group.";
            case 60411: return "User does not have access to this device.";
            case 60413: return "Device was not found.";
            case 60414: return "User does not have access to this location.";
            case 60415: return "User does not have access to this group.";

            /* Error messages below are for device readings */
            case 90000: return "A general error has occurred.";
            case 90001: return "Awaiting data.";
            case 90002: return "Data has been received by the server.";

        }
        return "An unknown error was encountered.";
    }
}