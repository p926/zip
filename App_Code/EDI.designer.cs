#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Instadose.EDI
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="IRV_InstaDev")]
	public partial class EDIDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertApplication(Instadose.EDI.Entity.Application instance);
    partial void UpdateApplication(Instadose.EDI.Entity.Application instance);
    partial void DeleteApplication(Instadose.EDI.Entity.Application instance);
    partial void InsertPurchaseOrder(Instadose.EDI.Entity.PurchaseOrder instance);
    partial void UpdatePurchaseOrder(Instadose.EDI.Entity.PurchaseOrder instance);
    partial void DeletePurchaseOrder(Instadose.EDI.Entity.PurchaseOrder instance);
    partial void InsertClientAccount(Instadose.EDI.Entity.ClientAccount instance);
    partial void UpdateClientAccount(Instadose.EDI.Entity.ClientAccount instance);
    partial void DeleteClientAccount(Instadose.EDI.Entity.ClientAccount instance);
    partial void InsertClient(Instadose.EDI.Entity.Client instance);
    partial void UpdateClient(Instadose.EDI.Entity.Client instance);
    partial void DeleteClient(Instadose.EDI.Entity.Client instance);
    partial void InsertErrorLog(Instadose.EDI.Entity.ErrorLog instance);
    partial void UpdateErrorLog(Instadose.EDI.Entity.ErrorLog instance);
    partial void DeleteErrorLog(Instadose.EDI.Entity.ErrorLog instance);
    partial void InsertInvoiceCarrierDetail(Instadose.EDI.Entity.InvoiceCarrierDetail instance);
    partial void UpdateInvoiceCarrierDetail(Instadose.EDI.Entity.InvoiceCarrierDetail instance);
    partial void DeleteInvoiceCarrierDetail(Instadose.EDI.Entity.InvoiceCarrierDetail instance);
    partial void InsertInvoiceCharge(Instadose.EDI.Entity.InvoiceCharge instance);
    partial void UpdateInvoiceCharge(Instadose.EDI.Entity.InvoiceCharge instance);
    partial void DeleteInvoiceCharge(Instadose.EDI.Entity.InvoiceCharge instance);
    partial void InsertInvoiceDetail(Instadose.EDI.Entity.InvoiceDetail instance);
    partial void UpdateInvoiceDetail(Instadose.EDI.Entity.InvoiceDetail instance);
    partial void DeleteInvoiceDetail(Instadose.EDI.Entity.InvoiceDetail instance);
    partial void InsertInvoice(Instadose.EDI.Entity.Invoice instance);
    partial void UpdateInvoice(Instadose.EDI.Entity.Invoice instance);
    partial void DeleteInvoice(Instadose.EDI.Entity.Invoice instance);
    partial void InsertInvoiceTermDateCode(Instadose.EDI.Entity.InvoiceTermDateCode instance);
    partial void UpdateInvoiceTermDateCode(Instadose.EDI.Entity.InvoiceTermDateCode instance);
    partial void DeleteInvoiceTermDateCode(Instadose.EDI.Entity.InvoiceTermDateCode instance);
    partial void InsertInvoiceTerm(Instadose.EDI.Entity.InvoiceTerm instance);
    partial void UpdateInvoiceTerm(Instadose.EDI.Entity.InvoiceTerm instance);
    partial void DeleteInvoiceTerm(Instadose.EDI.Entity.InvoiceTerm instance);
    partial void InsertProductSKUs(Instadose.EDI.Entity.ProductSKUs instance);
    partial void UpdateProductSKUs(Instadose.EDI.Entity.ProductSKUs instance);
    partial void DeleteProductSKUs(Instadose.EDI.Entity.ProductSKUs instance);
    partial void InsertPurchaseOrderAckDetail(Instadose.EDI.Entity.PurchaseOrderAckDetail instance);
    partial void UpdatePurchaseOrderAckDetail(Instadose.EDI.Entity.PurchaseOrderAckDetail instance);
    partial void DeletePurchaseOrderAckDetail(Instadose.EDI.Entity.PurchaseOrderAckDetail instance);
    partial void InsertPurchaseOrderAck(Instadose.EDI.Entity.PurchaseOrderAck instance);
    partial void UpdatePurchaseOrderAck(Instadose.EDI.Entity.PurchaseOrderAck instance);
    partial void DeletePurchaseOrderAck(Instadose.EDI.Entity.PurchaseOrderAck instance);
    partial void InsertPurchaseOrderContact(Instadose.EDI.Entity.PurchaseOrderContact instance);
    partial void UpdatePurchaseOrderContact(Instadose.EDI.Entity.PurchaseOrderContact instance);
    partial void DeletePurchaseOrderContact(Instadose.EDI.Entity.PurchaseOrderContact instance);
    partial void InsertPurchaseOrderDetail(Instadose.EDI.Entity.PurchaseOrderDetail instance);
    partial void UpdatePurchaseOrderDetail(Instadose.EDI.Entity.PurchaseOrderDetail instance);
    partial void DeletePurchaseOrderDetail(Instadose.EDI.Entity.PurchaseOrderDetail instance);
    partial void InsertPurchaseOrderRef(Instadose.EDI.Entity.PurchaseOrderRef instance);
    partial void UpdatePurchaseOrderRef(Instadose.EDI.Entity.PurchaseOrderRef instance);
    partial void DeletePurchaseOrderRef(Instadose.EDI.Entity.PurchaseOrderRef instance);
    #endregion
		
		public EDIDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Instadose.Properties.Settings.InsConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EDIDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EDIDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EDIDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EDIDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Instadose.EDI.Entity.Application> Applications
		{
			get
			{
				return this.GetTable<Instadose.EDI.Entity.Application>();
			}
		}
		
		public System.Data.Linq.Table<Instadose.EDI.Entity.PurchaseOrder> PurchaseOrders
		{
			get
			{
				return this.GetTable<Instadose.EDI.Entity.PurchaseOrder>();
			}
		}
		
		public System.Data.Linq.Table<Instadose.EDI.Entity.ClientAccount> ClientAccounts
		{
			get
			{
				return this.GetTable<Instadose.EDI.Entity.ClientAccount>();
			}
		}
		
		public System.Data.Linq.Table<Instadose.EDI.Entity.Client> Clients
		{
			get
			{
				return this.GetTable<Instadose.EDI.Entity.Client>();
			}
		}
		
		public System.Data.Linq.Table<Instadose.EDI.Entity.ErrorLog> ErrorLogs
		{
			get
			{
				return this.GetTable<Instadose.EDI.Entity.ErrorLog>();
			}
		}
		
		public System.Data.Linq.Table<Instadose.EDI.Entity.InvoiceCarrierDetail> InvoiceCarrierDetails
		{
			get
			{
				return this.GetTable<Instadose.EDI.Entity.InvoiceCarrierDetail>();
			}
		}
		
		public System.Data.Linq.Table<Instadose.EDI.Entity.InvoiceCharge> InvoiceCharges
		{
			get
			{
				return this.GetTable<Instadose.EDI.Entity.InvoiceCharge>();
			}
		}
		
		public System.Data.Linq.Table<Instadose.EDI.Entity.InvoiceDetail> InvoiceDetails
		{
			get
			{
				return this.GetTable<Instadose.EDI.Entity.InvoiceDetail>();
			}
		}
		
		public System.Data.Linq.Table<Instadose.EDI.Entity.Invoice> Invoices
		{
			get
			{
				return this.GetTable<Instadose.EDI.Entity.Invoice>();
			}
		}
		
		public System.Data.Linq.Table<Instadose.EDI.Entity.InvoiceTermDateCode> InvoiceTermDateCodes
		{
			get
			{
				return this.GetTable<Instadose.EDI.Entity.InvoiceTermDateCode>();
			}
		}
		
		public System.Data.Linq.Table<Instadose.EDI.Entity.InvoiceTerm> InvoiceTerms
		{
			get
			{
				return this.GetTable<Instadose.EDI.Entity.InvoiceTerm>();
			}
		}
		
		public System.Data.Linq.Table<Instadose.EDI.Entity.ProductSKUs> ProductSKUs
		{
			get
			{
				return this.GetTable<Instadose.EDI.Entity.ProductSKUs>();
			}
		}
		
		public System.Data.Linq.Table<Instadose.EDI.Entity.PurchaseOrderAckDetail> PurchaseOrderAckDetails
		{
			get
			{
				return this.GetTable<Instadose.EDI.Entity.PurchaseOrderAckDetail>();
			}
		}
		
		public System.Data.Linq.Table<Instadose.EDI.Entity.PurchaseOrderAck> PurchaseOrderAcks
		{
			get
			{
				return this.GetTable<Instadose.EDI.Entity.PurchaseOrderAck>();
			}
		}
		
		public System.Data.Linq.Table<Instadose.EDI.Entity.PurchaseOrderContact> PurchaseOrderContacts
		{
			get
			{
				return this.GetTable<Instadose.EDI.Entity.PurchaseOrderContact>();
			}
		}
		
		public System.Data.Linq.Table<Instadose.EDI.Entity.PurchaseOrderDetail> PurchaseOrderDetails
		{
			get
			{
				return this.GetTable<Instadose.EDI.Entity.PurchaseOrderDetail>();
			}
		}
		
		public System.Data.Linq.Table<Instadose.EDI.Entity.PurchaseOrderRef> PurchaseOrderRefs
		{
			get
			{
				return this.GetTable<Instadose.EDI.Entity.PurchaseOrderRef>();
			}
		}
	}
}
namespace Instadose.EDI.Entity
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="edi.Applications")]
	public partial class Application : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ApplicationID;
		
		private string _ApplicationName;
		
		private string _ApplicationShort;
		
		private EntitySet<PurchaseOrder> _PurchaseOrders;
		
		private EntitySet<ClientAccount> _ClientAccounts;
		
		private EntitySet<ErrorLog> _ErrorLogs;
		
		private EntitySet<Invoice> _Invoices;
		
		private EntitySet<ProductSKUs> _ProductSKUs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIDChanging(int value);
    partial void OnApplicationIDChanged();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnApplicationShortChanging(string value);
    partial void OnApplicationShortChanged();
    #endregion
		
		public Application()
		{
			this._PurchaseOrders = new EntitySet<PurchaseOrder>(new Action<PurchaseOrder>(this.attach_PurchaseOrders), new Action<PurchaseOrder>(this.detach_PurchaseOrders));
			this._ClientAccounts = new EntitySet<ClientAccount>(new Action<ClientAccount>(this.attach_ClientAccounts), new Action<ClientAccount>(this.detach_ClientAccounts));
			this._ErrorLogs = new EntitySet<ErrorLog>(new Action<ErrorLog>(this.attach_ErrorLogs), new Action<ErrorLog>(this.detach_ErrorLogs));
			this._Invoices = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoices), new Action<Invoice>(this.detach_Invoices));
			this._ProductSKUs = new EntitySet<ProductSKUs>(new Action<ProductSKUs>(this.attach_ProductSKUs), new Action<ProductSKUs>(this.detach_ProductSKUs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					this.OnApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationID = value;
					this.SendPropertyChanged("ApplicationID");
					this.OnApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationShort", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string ApplicationShort
		{
			get
			{
				return this._ApplicationShort;
			}
			set
			{
				if ((this._ApplicationShort != value))
				{
					this.OnApplicationShortChanging(value);
					this.SendPropertyChanging();
					this._ApplicationShort = value;
					this.SendPropertyChanged("ApplicationShort");
					this.OnApplicationShortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_PurchaseOrder", Storage="_PurchaseOrders", ThisKey="ApplicationID", OtherKey="ApplicationID")]
		public EntitySet<PurchaseOrder> PurchaseOrders
		{
			get
			{
				return this._PurchaseOrders;
			}
			set
			{
				this._PurchaseOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ClientAccount", Storage="_ClientAccounts", ThisKey="ApplicationID", OtherKey="ApplicationID")]
		public EntitySet<ClientAccount> ClientAccounts
		{
			get
			{
				return this._ClientAccounts;
			}
			set
			{
				this._ClientAccounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ErrorLog", Storage="_ErrorLogs", ThisKey="ApplicationID", OtherKey="ApplicationID")]
		public EntitySet<ErrorLog> ErrorLogs
		{
			get
			{
				return this._ErrorLogs;
			}
			set
			{
				this._ErrorLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_Invoice", Storage="_Invoices", ThisKey="ApplicationID", OtherKey="ApplicationID")]
		public EntitySet<Invoice> Invoices
		{
			get
			{
				return this._Invoices;
			}
			set
			{
				this._Invoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ProductSKUs", Storage="_ProductSKUs", ThisKey="ApplicationID", OtherKey="ApplicationID")]
		public EntitySet<ProductSKUs> ProductSKUs
		{
			get
			{
				return this._ProductSKUs;
			}
			set
			{
				this._ProductSKUs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PurchaseOrders(PurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.Application = this;
		}
		
		private void detach_PurchaseOrders(PurchaseOrder entity)
		{
			this.SendPropertyChanging();
			entity.Application = null;
		}
		
		private void attach_ClientAccounts(ClientAccount entity)
		{
			this.SendPropertyChanging();
			entity.Application = this;
		}
		
		private void detach_ClientAccounts(ClientAccount entity)
		{
			this.SendPropertyChanging();
			entity.Application = null;
		}
		
		private void attach_ErrorLogs(ErrorLog entity)
		{
			this.SendPropertyChanging();
			entity.Application = this;
		}
		
		private void detach_ErrorLogs(ErrorLog entity)
		{
			this.SendPropertyChanging();
			entity.Application = null;
		}
		
		private void attach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Application = this;
		}
		
		private void detach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.Application = null;
		}
		
		private void attach_ProductSKUs(ProductSKUs entity)
		{
			this.SendPropertyChanging();
			entity.Application = this;
		}
		
		private void detach_ProductSKUs(ProductSKUs entity)
		{
			this.SendPropertyChanging();
			entity.Application = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="edi.PurchaseOrders")]
	public partial class PurchaseOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PurchaseOrderID;
		
		private string _TxnSetPurposeCode;
		
		private string _POTypeCode;
		
		private string _PONumber;
		
		private System.DateTime _PORequestDate;
		
		private string _PODescription;
		
		private string _EntityIDCode;
		
		private string _CustomerName;
		
		private string _CustomerIDQualifier;
		
		private string _CustomerIDCode;
		
		private string _AddlCustomerName1;
		
		private string _AddlCustomerName2;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _City;
		
		private string _StateProvinceCode;
		
		private string _PostalCode;
		
		private System.Nullable<int> _SummaryLineItems;
		
		private System.Nullable<int> _SummaryHashTotal;
		
		private System.Nullable<int> _TotalSegments;
		
		private int _TransactionSetCtlNumber;
		
		private System.Nullable<System.DateTime> _AcknowledgedDate;
		
		private string _Notes;
		
		private bool _HasIssues;
		
		private int _ReviewStatusID;
		
		private string _ReviewedBy;
		
		private System.Nullable<System.DateTime> _ReviewedDate;
		
		private string _Account;
		
		private System.Nullable<int> _ApplicationID;
		
		private System.Nullable<int> _DealerID;
		
		private string _PORequestNumber;
		
		private EntitySet<PurchaseOrderAck> _PurchaseOrderAcks;
		
		private EntitySet<PurchaseOrderContact> _PurchaseOrderContacts;
		
		private EntitySet<PurchaseOrderDetail> _PurchaseOrderDetails;
		
		private EntitySet<PurchaseOrderRef> _PurchaseOrderRefs;
		
		private EntityRef<Application> _Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPurchaseOrderIDChanging(int value);
    partial void OnPurchaseOrderIDChanged();
    partial void OnTxnSetPurposeCodeChanging(string value);
    partial void OnTxnSetPurposeCodeChanged();
    partial void OnPOTypeCodeChanging(string value);
    partial void OnPOTypeCodeChanged();
    partial void OnPONumberChanging(string value);
    partial void OnPONumberChanged();
    partial void OnPORequestDateChanging(System.DateTime value);
    partial void OnPORequestDateChanged();
    partial void OnPODescriptionChanging(string value);
    partial void OnPODescriptionChanged();
    partial void OnEntityIDCodeChanging(string value);
    partial void OnEntityIDCodeChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnCustomerIDQualifierChanging(string value);
    partial void OnCustomerIDQualifierChanged();
    partial void OnCustomerIDCodeChanging(string value);
    partial void OnCustomerIDCodeChanged();
    partial void OnAddlCustomerName1Changing(string value);
    partial void OnAddlCustomerName1Changed();
    partial void OnAddlCustomerName2Changing(string value);
    partial void OnAddlCustomerName2Changed();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateProvinceCodeChanging(string value);
    partial void OnStateProvinceCodeChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnSummaryLineItemsChanging(System.Nullable<int> value);
    partial void OnSummaryLineItemsChanged();
    partial void OnSummaryHashTotalChanging(System.Nullable<int> value);
    partial void OnSummaryHashTotalChanged();
    partial void OnTotalSegmentsChanging(System.Nullable<int> value);
    partial void OnTotalSegmentsChanged();
    partial void OnTransactionSetCtlNumberChanging(int value);
    partial void OnTransactionSetCtlNumberChanged();
    partial void OnAcknowledgedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAcknowledgedDateChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnHasIssuesChanging(bool value);
    partial void OnHasIssuesChanged();
    partial void OnReviewStatusIDChanging(int value);
    partial void OnReviewStatusIDChanged();
    partial void OnReviewedByChanging(string value);
    partial void OnReviewedByChanged();
    partial void OnReviewedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReviewedDateChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    partial void OnApplicationIDChanging(System.Nullable<int> value);
    partial void OnApplicationIDChanged();
    partial void OnDealerIDChanging(System.Nullable<int> value);
    partial void OnDealerIDChanged();
    partial void OnPORequestNumberChanging(string value);
    partial void OnPORequestNumberChanged();
    #endregion
		
		public PurchaseOrder()
		{
			this._PurchaseOrderAcks = new EntitySet<PurchaseOrderAck>(new Action<PurchaseOrderAck>(this.attach_PurchaseOrderAcks), new Action<PurchaseOrderAck>(this.detach_PurchaseOrderAcks));
			this._PurchaseOrderContacts = new EntitySet<PurchaseOrderContact>(new Action<PurchaseOrderContact>(this.attach_PurchaseOrderContacts), new Action<PurchaseOrderContact>(this.detach_PurchaseOrderContacts));
			this._PurchaseOrderDetails = new EntitySet<PurchaseOrderDetail>(new Action<PurchaseOrderDetail>(this.attach_PurchaseOrderDetails), new Action<PurchaseOrderDetail>(this.detach_PurchaseOrderDetails));
			this._PurchaseOrderRefs = new EntitySet<PurchaseOrderRef>(new Action<PurchaseOrderRef>(this.attach_PurchaseOrderRefs), new Action<PurchaseOrderRef>(this.detach_PurchaseOrderRefs));
			this._Application = default(EntityRef<Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PurchaseOrderID
		{
			get
			{
				return this._PurchaseOrderID;
			}
			set
			{
				if ((this._PurchaseOrderID != value))
				{
					this.OnPurchaseOrderIDChanging(value);
					this.SendPropertyChanging();
					this._PurchaseOrderID = value;
					this.SendPropertyChanged("PurchaseOrderID");
					this.OnPurchaseOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TxnSetPurposeCode", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string TxnSetPurposeCode
		{
			get
			{
				return this._TxnSetPurposeCode;
			}
			set
			{
				if ((this._TxnSetPurposeCode != value))
				{
					this.OnTxnSetPurposeCodeChanging(value);
					this.SendPropertyChanging();
					this._TxnSetPurposeCode = value;
					this.SendPropertyChanged("TxnSetPurposeCode");
					this.OnTxnSetPurposeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POTypeCode", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string POTypeCode
		{
			get
			{
				return this._POTypeCode;
			}
			set
			{
				if ((this._POTypeCode != value))
				{
					this.OnPOTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._POTypeCode = value;
					this.SendPropertyChanged("POTypeCode");
					this.OnPOTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PONumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PONumber
		{
			get
			{
				return this._PONumber;
			}
			set
			{
				if ((this._PONumber != value))
				{
					this.OnPONumberChanging(value);
					this.SendPropertyChanging();
					this._PONumber = value;
					this.SendPropertyChanged("PONumber");
					this.OnPONumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PORequestDate", DbType="DateTime NOT NULL")]
		public System.DateTime PORequestDate
		{
			get
			{
				return this._PORequestDate;
			}
			set
			{
				if ((this._PORequestDate != value))
				{
					this.OnPORequestDateChanging(value);
					this.SendPropertyChanging();
					this._PORequestDate = value;
					this.SendPropertyChanged("PORequestDate");
					this.OnPORequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PODescription", DbType="NVarChar(1000)")]
		public string PODescription
		{
			get
			{
				return this._PODescription;
			}
			set
			{
				if ((this._PODescription != value))
				{
					this.OnPODescriptionChanging(value);
					this.SendPropertyChanging();
					this._PODescription = value;
					this.SendPropertyChanged("PODescription");
					this.OnPODescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityIDCode", DbType="NVarChar(3)")]
		public string EntityIDCode
		{
			get
			{
				return this._EntityIDCode;
			}
			set
			{
				if ((this._EntityIDCode != value))
				{
					this.OnEntityIDCodeChanging(value);
					this.SendPropertyChanging();
					this._EntityIDCode = value;
					this.SendPropertyChanged("EntityIDCode");
					this.OnEntityIDCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(255)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerIDQualifier", DbType="NVarChar(10)")]
		public string CustomerIDQualifier
		{
			get
			{
				return this._CustomerIDQualifier;
			}
			set
			{
				if ((this._CustomerIDQualifier != value))
				{
					this.OnCustomerIDQualifierChanging(value);
					this.SendPropertyChanging();
					this._CustomerIDQualifier = value;
					this.SendPropertyChanged("CustomerIDQualifier");
					this.OnCustomerIDQualifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerIDCode", DbType="NVarChar(255)")]
		public string CustomerIDCode
		{
			get
			{
				return this._CustomerIDCode;
			}
			set
			{
				if ((this._CustomerIDCode != value))
				{
					this.OnCustomerIDCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomerIDCode = value;
					this.SendPropertyChanged("CustomerIDCode");
					this.OnCustomerIDCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddlCustomerName1", DbType="NVarChar(255)")]
		public string AddlCustomerName1
		{
			get
			{
				return this._AddlCustomerName1;
			}
			set
			{
				if ((this._AddlCustomerName1 != value))
				{
					this.OnAddlCustomerName1Changing(value);
					this.SendPropertyChanging();
					this._AddlCustomerName1 = value;
					this.SendPropertyChanged("AddlCustomerName1");
					this.OnAddlCustomerName1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddlCustomerName2", DbType="NVarChar(255)")]
		public string AddlCustomerName2
		{
			get
			{
				return this._AddlCustomerName2;
			}
			set
			{
				if ((this._AddlCustomerName2 != value))
				{
					this.OnAddlCustomerName2Changing(value);
					this.SendPropertyChanging();
					this._AddlCustomerName2 = value;
					this.SendPropertyChanged("AddlCustomerName2");
					this.OnAddlCustomerName2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVarChar(255)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(255)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(100)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateProvinceCode", DbType="NVarChar(100)")]
		public string StateProvinceCode
		{
			get
			{
				return this._StateProvinceCode;
			}
			set
			{
				if ((this._StateProvinceCode != value))
				{
					this.OnStateProvinceCodeChanging(value);
					this.SendPropertyChanging();
					this._StateProvinceCode = value;
					this.SendPropertyChanged("StateProvinceCode");
					this.OnStateProvinceCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(15)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SummaryLineItems", DbType="Int")]
		public System.Nullable<int> SummaryLineItems
		{
			get
			{
				return this._SummaryLineItems;
			}
			set
			{
				if ((this._SummaryLineItems != value))
				{
					this.OnSummaryLineItemsChanging(value);
					this.SendPropertyChanging();
					this._SummaryLineItems = value;
					this.SendPropertyChanged("SummaryLineItems");
					this.OnSummaryLineItemsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SummaryHashTotal", DbType="Int")]
		public System.Nullable<int> SummaryHashTotal
		{
			get
			{
				return this._SummaryHashTotal;
			}
			set
			{
				if ((this._SummaryHashTotal != value))
				{
					this.OnSummaryHashTotalChanging(value);
					this.SendPropertyChanging();
					this._SummaryHashTotal = value;
					this.SendPropertyChanged("SummaryHashTotal");
					this.OnSummaryHashTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSegments", DbType="Int")]
		public System.Nullable<int> TotalSegments
		{
			get
			{
				return this._TotalSegments;
			}
			set
			{
				if ((this._TotalSegments != value))
				{
					this.OnTotalSegmentsChanging(value);
					this.SendPropertyChanging();
					this._TotalSegments = value;
					this.SendPropertyChanged("TotalSegments");
					this.OnTotalSegmentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionSetCtlNumber", DbType="Int NOT NULL")]
		public int TransactionSetCtlNumber
		{
			get
			{
				return this._TransactionSetCtlNumber;
			}
			set
			{
				if ((this._TransactionSetCtlNumber != value))
				{
					this.OnTransactionSetCtlNumberChanging(value);
					this.SendPropertyChanging();
					this._TransactionSetCtlNumber = value;
					this.SendPropertyChanged("TransactionSetCtlNumber");
					this.OnTransactionSetCtlNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcknowledgedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AcknowledgedDate
		{
			get
			{
				return this._AcknowledgedDate;
			}
			set
			{
				if ((this._AcknowledgedDate != value))
				{
					this.OnAcknowledgedDateChanging(value);
					this.SendPropertyChanging();
					this._AcknowledgedDate = value;
					this.SendPropertyChanged("AcknowledgedDate");
					this.OnAcknowledgedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(1000)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasIssues", DbType="Bit NOT NULL")]
		public bool HasIssues
		{
			get
			{
				return this._HasIssues;
			}
			set
			{
				if ((this._HasIssues != value))
				{
					this.OnHasIssuesChanging(value);
					this.SendPropertyChanging();
					this._HasIssues = value;
					this.SendPropertyChanged("HasIssues");
					this.OnHasIssuesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReviewStatusID", DbType="Int NOT NULL")]
		public int ReviewStatusID
		{
			get
			{
				return this._ReviewStatusID;
			}
			set
			{
				if ((this._ReviewStatusID != value))
				{
					this.OnReviewStatusIDChanging(value);
					this.SendPropertyChanging();
					this._ReviewStatusID = value;
					this.SendPropertyChanged("ReviewStatusID");
					this.OnReviewStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReviewedBy", DbType="NVarChar(20)")]
		public string ReviewedBy
		{
			get
			{
				return this._ReviewedBy;
			}
			set
			{
				if ((this._ReviewedBy != value))
				{
					this.OnReviewedByChanging(value);
					this.SendPropertyChanging();
					this._ReviewedBy = value;
					this.SendPropertyChanged("ReviewedBy");
					this.OnReviewedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReviewedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReviewedDate
		{
			get
			{
				return this._ReviewedDate;
			}
			set
			{
				if ((this._ReviewedDate != value))
				{
					this.OnReviewedDateChanging(value);
					this.SendPropertyChanging();
					this._ReviewedDate = value;
					this.SendPropertyChanged("ReviewedDate");
					this.OnReviewedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="NVarChar(8)")]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this.OnAccountChanging(value);
					this.SendPropertyChanging();
					this._Account = value;
					this.SendPropertyChanged("Account");
					this.OnAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="Int")]
		public System.Nullable<int> ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					if (this._Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationID = value;
					this.SendPropertyChanged("ApplicationID");
					this.OnApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealerID", DbType="Int")]
		public System.Nullable<int> DealerID
		{
			get
			{
				return this._DealerID;
			}
			set
			{
				if ((this._DealerID != value))
				{
					this.OnDealerIDChanging(value);
					this.SendPropertyChanging();
					this._DealerID = value;
					this.SendPropertyChanged("DealerID");
					this.OnDealerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PORequestNumber", DbType="NVarChar(20)")]
		public string PORequestNumber
		{
			get
			{
				return this._PORequestNumber;
			}
			set
			{
				if ((this._PORequestNumber != value))
				{
					this.OnPORequestNumberChanging(value);
					this.SendPropertyChanging();
					this._PORequestNumber = value;
					this.SendPropertyChanged("PORequestNumber");
					this.OnPORequestNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseOrder_PurchaseOrderAck", Storage="_PurchaseOrderAcks", ThisKey="PurchaseOrderID", OtherKey="PurchaseOrderID")]
		public EntitySet<PurchaseOrderAck> PurchaseOrderAcks
		{
			get
			{
				return this._PurchaseOrderAcks;
			}
			set
			{
				this._PurchaseOrderAcks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseOrder_PurchaseOrderContact", Storage="_PurchaseOrderContacts", ThisKey="PurchaseOrderID", OtherKey="EDIPurchaseOrderID")]
		public EntitySet<PurchaseOrderContact> PurchaseOrderContacts
		{
			get
			{
				return this._PurchaseOrderContacts;
			}
			set
			{
				this._PurchaseOrderContacts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseOrder_PurchaseOrderDetail", Storage="_PurchaseOrderDetails", ThisKey="PurchaseOrderID", OtherKey="EDIPOHeaderID")]
		public EntitySet<PurchaseOrderDetail> PurchaseOrderDetails
		{
			get
			{
				return this._PurchaseOrderDetails;
			}
			set
			{
				this._PurchaseOrderDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseOrder_PurchaseOrderRef", Storage="_PurchaseOrderRefs", ThisKey="PurchaseOrderID", OtherKey="EDIPurchaseOrderID")]
		public EntitySet<PurchaseOrderRef> PurchaseOrderRefs
		{
			get
			{
				return this._PurchaseOrderRefs;
			}
			set
			{
				this._PurchaseOrderRefs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_PurchaseOrder", Storage="_Application", ThisKey="ApplicationID", OtherKey="ApplicationID", IsForeignKey=true)]
		public Application Application
		{
			get
			{
				return this._Application.Entity;
			}
			set
			{
				Application previousValue = this._Application.Entity;
				if (((previousValue != value) 
							|| (this._Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Application.Entity = null;
						previousValue.PurchaseOrders.Remove(this);
					}
					this._Application.Entity = value;
					if ((value != null))
					{
						value.PurchaseOrders.Add(this);
						this._ApplicationID = value.ApplicationID;
					}
					else
					{
						this._ApplicationID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PurchaseOrderAcks(PurchaseOrderAck entity)
		{
			this.SendPropertyChanging();
			entity.PurchaseOrder = this;
		}
		
		private void detach_PurchaseOrderAcks(PurchaseOrderAck entity)
		{
			this.SendPropertyChanging();
			entity.PurchaseOrder = null;
		}
		
		private void attach_PurchaseOrderContacts(PurchaseOrderContact entity)
		{
			this.SendPropertyChanging();
			entity.PurchaseOrder = this;
		}
		
		private void detach_PurchaseOrderContacts(PurchaseOrderContact entity)
		{
			this.SendPropertyChanging();
			entity.PurchaseOrder = null;
		}
		
		private void attach_PurchaseOrderDetails(PurchaseOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.PurchaseOrder = this;
		}
		
		private void detach_PurchaseOrderDetails(PurchaseOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.PurchaseOrder = null;
		}
		
		private void attach_PurchaseOrderRefs(PurchaseOrderRef entity)
		{
			this.SendPropertyChanging();
			entity.PurchaseOrder = this;
		}
		
		private void detach_PurchaseOrderRefs(PurchaseOrderRef entity)
		{
			this.SendPropertyChanging();
			entity.PurchaseOrder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="edi.ClientAccounts")]
	public partial class ClientAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClientID;
		
		private string _Account;
		
		private int _ApplicationID;
		
		private bool _Active;
		
		private EntityRef<Application> _Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClientIDChanging(int value);
    partial void OnClientIDChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    partial void OnApplicationIDChanging(int value);
    partial void OnApplicationIDChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public ClientAccount()
		{
			this._Application = default(EntityRef<Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="NVarChar(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this.OnAccountChanging(value);
					this.SendPropertyChanging();
					this._Account = value;
					this.SendPropertyChanged("Account");
					this.OnAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					if (this._Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationID = value;
					this.SendPropertyChanged("ApplicationID");
					this.OnApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ClientAccount", Storage="_Application", ThisKey="ApplicationID", OtherKey="ApplicationID", IsForeignKey=true)]
		public Application Application
		{
			get
			{
				return this._Application.Entity;
			}
			set
			{
				Application previousValue = this._Application.Entity;
				if (((previousValue != value) 
							|| (this._Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Application.Entity = null;
						previousValue.ClientAccounts.Remove(this);
					}
					this._Application.Entity = value;
					if ((value != null))
					{
						value.ClientAccounts.Add(this);
						this._ApplicationID = value.ApplicationID;
					}
					else
					{
						this._ApplicationID = default(int);
					}
					this.SendPropertyChanged("Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="edi.Clients")]
	public partial class Client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClientID;
		
		private string _ClientName;
		
		private string _FtpAddress;
		
		private int _FtpPort;
		
		private string _FtpUserName;
		
		private string _FtpPassword;
		
		private string _InboundPath;
		
		private string _OutboundPath;
		
		private string _EDIIdentifer;
		
		private bool _Active;
		
		private EntitySet<ProductSKUs> _ProductSKUs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClientIDChanging(int value);
    partial void OnClientIDChanged();
    partial void OnClientNameChanging(string value);
    partial void OnClientNameChanged();
    partial void OnFtpAddressChanging(string value);
    partial void OnFtpAddressChanged();
    partial void OnFtpPortChanging(int value);
    partial void OnFtpPortChanged();
    partial void OnFtpUserNameChanging(string value);
    partial void OnFtpUserNameChanged();
    partial void OnFtpPasswordChanging(string value);
    partial void OnFtpPasswordChanged();
    partial void OnInboundPathChanging(string value);
    partial void OnInboundPathChanged();
    partial void OnOutboundPathChanging(string value);
    partial void OnOutboundPathChanged();
    partial void OnEDIIdentiferChanging(string value);
    partial void OnEDIIdentiferChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public Client()
		{
			this._ProductSKUs = new EntitySet<ProductSKUs>(new Action<ProductSKUs>(this.attach_ProductSKUs), new Action<ProductSKUs>(this.detach_ProductSKUs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ClientName
		{
			get
			{
				return this._ClientName;
			}
			set
			{
				if ((this._ClientName != value))
				{
					this.OnClientNameChanging(value);
					this.SendPropertyChanging();
					this._ClientName = value;
					this.SendPropertyChanged("ClientName");
					this.OnClientNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FtpAddress", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string FtpAddress
		{
			get
			{
				return this._FtpAddress;
			}
			set
			{
				if ((this._FtpAddress != value))
				{
					this.OnFtpAddressChanging(value);
					this.SendPropertyChanging();
					this._FtpAddress = value;
					this.SendPropertyChanged("FtpAddress");
					this.OnFtpAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FtpPort", DbType="Int NOT NULL")]
		public int FtpPort
		{
			get
			{
				return this._FtpPort;
			}
			set
			{
				if ((this._FtpPort != value))
				{
					this.OnFtpPortChanging(value);
					this.SendPropertyChanging();
					this._FtpPort = value;
					this.SendPropertyChanged("FtpPort");
					this.OnFtpPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FtpUserName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string FtpUserName
		{
			get
			{
				return this._FtpUserName;
			}
			set
			{
				if ((this._FtpUserName != value))
				{
					this.OnFtpUserNameChanging(value);
					this.SendPropertyChanging();
					this._FtpUserName = value;
					this.SendPropertyChanged("FtpUserName");
					this.OnFtpUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FtpPassword", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string FtpPassword
		{
			get
			{
				return this._FtpPassword;
			}
			set
			{
				if ((this._FtpPassword != value))
				{
					this.OnFtpPasswordChanging(value);
					this.SendPropertyChanging();
					this._FtpPassword = value;
					this.SendPropertyChanged("FtpPassword");
					this.OnFtpPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InboundPath", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string InboundPath
		{
			get
			{
				return this._InboundPath;
			}
			set
			{
				if ((this._InboundPath != value))
				{
					this.OnInboundPathChanging(value);
					this.SendPropertyChanging();
					this._InboundPath = value;
					this.SendPropertyChanged("InboundPath");
					this.OnInboundPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutboundPath", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string OutboundPath
		{
			get
			{
				return this._OutboundPath;
			}
			set
			{
				if ((this._OutboundPath != value))
				{
					this.OnOutboundPathChanging(value);
					this.SendPropertyChanging();
					this._OutboundPath = value;
					this.SendPropertyChanged("OutboundPath");
					this.OnOutboundPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDIIdentifer", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string EDIIdentifer
		{
			get
			{
				return this._EDIIdentifer;
			}
			set
			{
				if ((this._EDIIdentifer != value))
				{
					this.OnEDIIdentiferChanging(value);
					this.SendPropertyChanging();
					this._EDIIdentifer = value;
					this.SendPropertyChanged("EDIIdentifer");
					this.OnEDIIdentiferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_ProductSKUs", Storage="_ProductSKUs", ThisKey="ClientID", OtherKey="ClientID")]
		public EntitySet<ProductSKUs> ProductSKUs
		{
			get
			{
				return this._ProductSKUs;
			}
			set
			{
				this._ProductSKUs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductSKUs(ProductSKUs entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_ProductSKUs(ProductSKUs entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="edi.ErrorLogs")]
	public partial class ErrorLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ErrorLogID;
		
		private int _ApplicationID;
		
		private string _Account;
		
		private System.DateTime _ErrorDate;
		
		private string _ErrorMessage;
		
		private string _ApplicationDesc;
		
		private EntityRef<Application> _Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnErrorLogIDChanging(int value);
    partial void OnErrorLogIDChanged();
    partial void OnApplicationIDChanging(int value);
    partial void OnApplicationIDChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    partial void OnErrorDateChanging(System.DateTime value);
    partial void OnErrorDateChanged();
    partial void OnErrorMessageChanging(string value);
    partial void OnErrorMessageChanged();
    partial void OnApplicationDescChanging(string value);
    partial void OnApplicationDescChanged();
    #endregion
		
		public ErrorLog()
		{
			this._Application = default(EntityRef<Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorLogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ErrorLogID
		{
			get
			{
				return this._ErrorLogID;
			}
			set
			{
				if ((this._ErrorLogID != value))
				{
					this.OnErrorLogIDChanging(value);
					this.SendPropertyChanging();
					this._ErrorLogID = value;
					this.SendPropertyChanged("ErrorLogID");
					this.OnErrorLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="Int NOT NULL")]
		public int ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					if (this._Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationID = value;
					this.SendPropertyChanged("ApplicationID");
					this.OnApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this.OnAccountChanging(value);
					this.SendPropertyChanging();
					this._Account = value;
					this.SendPropertyChanged("Account");
					this.OnAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorDate", DbType="DateTime NOT NULL")]
		public System.DateTime ErrorDate
		{
			get
			{
				return this._ErrorDate;
			}
			set
			{
				if ((this._ErrorDate != value))
				{
					this.OnErrorDateChanging(value);
					this.SendPropertyChanging();
					this._ErrorDate = value;
					this.SendPropertyChanged("ErrorDate");
					this.OnErrorDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this.OnErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._ErrorMessage = value;
					this.SendPropertyChanged("ErrorMessage");
					this.OnErrorMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationDesc", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ApplicationDesc
		{
			get
			{
				return this._ApplicationDesc;
			}
			set
			{
				if ((this._ApplicationDesc != value))
				{
					this.OnApplicationDescChanging(value);
					this.SendPropertyChanging();
					this._ApplicationDesc = value;
					this.SendPropertyChanged("ApplicationDesc");
					this.OnApplicationDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ErrorLog", Storage="_Application", ThisKey="ApplicationID", OtherKey="ApplicationID", IsForeignKey=true)]
		public Application Application
		{
			get
			{
				return this._Application.Entity;
			}
			set
			{
				Application previousValue = this._Application.Entity;
				if (((previousValue != value) 
							|| (this._Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Application.Entity = null;
						previousValue.ErrorLogs.Remove(this);
					}
					this._Application.Entity = value;
					if ((value != null))
					{
						value.ErrorLogs.Add(this);
						this._ApplicationID = value.ApplicationID;
					}
					else
					{
						this._ApplicationID = default(int);
					}
					this.SendPropertyChanged("Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="edi.InvoiceCarrierDetails")]
	public partial class InvoiceCarrierDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceCarrierID;
		
		private int _InvoiceID;
		
		private string _CarrierAlphaCode;
		
		private string _CarrierRouting;
		
		private string _CarrierTrackingNumber;
		
		private EntityRef<Invoice> _Invoice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceCarrierIDChanging(int value);
    partial void OnInvoiceCarrierIDChanged();
    partial void OnInvoiceIDChanging(int value);
    partial void OnInvoiceIDChanged();
    partial void OnCarrierAlphaCodeChanging(string value);
    partial void OnCarrierAlphaCodeChanged();
    partial void OnCarrierRoutingChanging(string value);
    partial void OnCarrierRoutingChanged();
    partial void OnCarrierTrackingNumberChanging(string value);
    partial void OnCarrierTrackingNumberChanged();
    #endregion
		
		public InvoiceCarrierDetail()
		{
			this._Invoice = default(EntityRef<Invoice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceCarrierID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InvoiceCarrierID
		{
			get
			{
				return this._InvoiceCarrierID;
			}
			set
			{
				if ((this._InvoiceCarrierID != value))
				{
					this.OnInvoiceCarrierIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceCarrierID = value;
					this.SendPropertyChanged("InvoiceCarrierID");
					this.OnInvoiceCarrierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="Int NOT NULL")]
		public int InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					if (this._Invoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarrierAlphaCode", DbType="NVarChar(10)")]
		public string CarrierAlphaCode
		{
			get
			{
				return this._CarrierAlphaCode;
			}
			set
			{
				if ((this._CarrierAlphaCode != value))
				{
					this.OnCarrierAlphaCodeChanging(value);
					this.SendPropertyChanging();
					this._CarrierAlphaCode = value;
					this.SendPropertyChanged("CarrierAlphaCode");
					this.OnCarrierAlphaCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarrierRouting", DbType="NVarChar(100)")]
		public string CarrierRouting
		{
			get
			{
				return this._CarrierRouting;
			}
			set
			{
				if ((this._CarrierRouting != value))
				{
					this.OnCarrierRoutingChanging(value);
					this.SendPropertyChanging();
					this._CarrierRouting = value;
					this.SendPropertyChanged("CarrierRouting");
					this.OnCarrierRoutingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarrierTrackingNumber", DbType="NVarChar(50)")]
		public string CarrierTrackingNumber
		{
			get
			{
				return this._CarrierTrackingNumber;
			}
			set
			{
				if ((this._CarrierTrackingNumber != value))
				{
					this.OnCarrierTrackingNumberChanging(value);
					this.SendPropertyChanging();
					this._CarrierTrackingNumber = value;
					this.SendPropertyChanged("CarrierTrackingNumber");
					this.OnCarrierTrackingNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_InvoiceCarrierDetail", Storage="_Invoice", ThisKey="InvoiceID", OtherKey="InvoiceID", IsForeignKey=true)]
		public Invoice Invoice
		{
			get
			{
				return this._Invoice.Entity;
			}
			set
			{
				Invoice previousValue = this._Invoice.Entity;
				if (((previousValue != value) 
							|| (this._Invoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Invoice.Entity = null;
						previousValue.InvoiceCarrierDetails.Remove(this);
					}
					this._Invoice.Entity = value;
					if ((value != null))
					{
						value.InvoiceCarrierDetails.Add(this);
						this._InvoiceID = value.InvoiceID;
					}
					else
					{
						this._InvoiceID = default(int);
					}
					this.SendPropertyChanged("Invoice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="edi.InvoiceCharges")]
	public partial class InvoiceCharge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceChargeID;
		
		private int _InvoiceID;
		
		private System.Nullable<char> _ChargeIndicator;
		
		private string _ChargeCode;
		
		private System.Nullable<decimal> _ChargeAmount;
		
		private string _InvoiceChargeDesc;
		
		private EntityRef<Invoice> _Invoice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceChargeIDChanging(int value);
    partial void OnInvoiceChargeIDChanged();
    partial void OnInvoiceIDChanging(int value);
    partial void OnInvoiceIDChanged();
    partial void OnChargeIndicatorChanging(System.Nullable<char> value);
    partial void OnChargeIndicatorChanged();
    partial void OnChargeCodeChanging(string value);
    partial void OnChargeCodeChanged();
    partial void OnChargeAmountChanging(System.Nullable<decimal> value);
    partial void OnChargeAmountChanged();
    partial void OnInvoiceChargeDescChanging(string value);
    partial void OnInvoiceChargeDescChanged();
    #endregion
		
		public InvoiceCharge()
		{
			this._Invoice = default(EntityRef<Invoice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceChargeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InvoiceChargeID
		{
			get
			{
				return this._InvoiceChargeID;
			}
			set
			{
				if ((this._InvoiceChargeID != value))
				{
					this.OnInvoiceChargeIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceChargeID = value;
					this.SendPropertyChanged("InvoiceChargeID");
					this.OnInvoiceChargeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="Int NOT NULL")]
		public int InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					if (this._Invoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargeIndicator", DbType="Char(1)")]
		public System.Nullable<char> ChargeIndicator
		{
			get
			{
				return this._ChargeIndicator;
			}
			set
			{
				if ((this._ChargeIndicator != value))
				{
					this.OnChargeIndicatorChanging(value);
					this.SendPropertyChanging();
					this._ChargeIndicator = value;
					this.SendPropertyChanged("ChargeIndicator");
					this.OnChargeIndicatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargeCode", DbType="NVarChar(100)")]
		public string ChargeCode
		{
			get
			{
				return this._ChargeCode;
			}
			set
			{
				if ((this._ChargeCode != value))
				{
					this.OnChargeCodeChanging(value);
					this.SendPropertyChanging();
					this._ChargeCode = value;
					this.SendPropertyChanged("ChargeCode");
					this.OnChargeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargeAmount", DbType="Money")]
		public System.Nullable<decimal> ChargeAmount
		{
			get
			{
				return this._ChargeAmount;
			}
			set
			{
				if ((this._ChargeAmount != value))
				{
					this.OnChargeAmountChanging(value);
					this.SendPropertyChanging();
					this._ChargeAmount = value;
					this.SendPropertyChanged("ChargeAmount");
					this.OnChargeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceChargeDesc", DbType="NVarChar(100)")]
		public string InvoiceChargeDesc
		{
			get
			{
				return this._InvoiceChargeDesc;
			}
			set
			{
				if ((this._InvoiceChargeDesc != value))
				{
					this.OnInvoiceChargeDescChanging(value);
					this.SendPropertyChanging();
					this._InvoiceChargeDesc = value;
					this.SendPropertyChanged("InvoiceChargeDesc");
					this.OnInvoiceChargeDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_InvoiceCharge", Storage="_Invoice", ThisKey="InvoiceID", OtherKey="InvoiceID", IsForeignKey=true)]
		public Invoice Invoice
		{
			get
			{
				return this._Invoice.Entity;
			}
			set
			{
				Invoice previousValue = this._Invoice.Entity;
				if (((previousValue != value) 
							|| (this._Invoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Invoice.Entity = null;
						previousValue.InvoiceCharges.Remove(this);
					}
					this._Invoice.Entity = value;
					if ((value != null))
					{
						value.InvoiceCharges.Add(this);
						this._InvoiceID = value.InvoiceID;
					}
					else
					{
						this._InvoiceID = default(int);
					}
					this.SendPropertyChanged("Invoice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="edi.InvoiceDetails")]
	public partial class InvoiceDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceDetailID;
		
		private int _InvoiceID;
		
		private System.Nullable<int> _Quantity;
		
		private string _UnitMeasurement;
		
		private System.Nullable<decimal> _UnitPrice;
		
		private string _ProductQualifier;
		
		private string _VendorProductCode;
		
		private string _BuyersCatalogQualifier;
		
		private string _BuyersProductCode;
		
		private string _TaxTypeCode;
		
		private System.Nullable<double> _TaxAmount;
		
		private string _ItemDescriptionType;
		
		private string _ItemDescription;
		
		private System.Nullable<System.DateTime> _ContractStartDate;
		
		private System.Nullable<System.DateTime> _ContractEndDate;
		
		private EntityRef<Invoice> _Invoice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceDetailIDChanging(int value);
    partial void OnInvoiceDetailIDChanged();
    partial void OnInvoiceIDChanging(int value);
    partial void OnInvoiceIDChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnUnitMeasurementChanging(string value);
    partial void OnUnitMeasurementChanged();
    partial void OnUnitPriceChanging(System.Nullable<decimal> value);
    partial void OnUnitPriceChanged();
    partial void OnProductQualifierChanging(string value);
    partial void OnProductQualifierChanged();
    partial void OnVendorProductCodeChanging(string value);
    partial void OnVendorProductCodeChanged();
    partial void OnBuyersCatalogQualifierChanging(string value);
    partial void OnBuyersCatalogQualifierChanged();
    partial void OnBuyersProductCodeChanging(string value);
    partial void OnBuyersProductCodeChanged();
    partial void OnTaxTypeCodeChanging(string value);
    partial void OnTaxTypeCodeChanged();
    partial void OnTaxAmountChanging(System.Nullable<double> value);
    partial void OnTaxAmountChanged();
    partial void OnItemDescriptionTypeChanging(string value);
    partial void OnItemDescriptionTypeChanged();
    partial void OnItemDescriptionChanging(string value);
    partial void OnItemDescriptionChanged();
    partial void OnContractStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnContractStartDateChanged();
    partial void OnContractEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnContractEndDateChanged();
    #endregion
		
		public InvoiceDetail()
		{
			this._Invoice = default(EntityRef<Invoice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDetailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InvoiceDetailID
		{
			get
			{
				return this._InvoiceDetailID;
			}
			set
			{
				if ((this._InvoiceDetailID != value))
				{
					this.OnInvoiceDetailIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDetailID = value;
					this.SendPropertyChanged("InvoiceDetailID");
					this.OnInvoiceDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="Int NOT NULL")]
		public int InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					if (this._Invoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitMeasurement", DbType="NVarChar(10)")]
		public string UnitMeasurement
		{
			get
			{
				return this._UnitMeasurement;
			}
			set
			{
				if ((this._UnitMeasurement != value))
				{
					this.OnUnitMeasurementChanging(value);
					this.SendPropertyChanging();
					this._UnitMeasurement = value;
					this.SendPropertyChanged("UnitMeasurement");
					this.OnUnitMeasurementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Money")]
		public System.Nullable<decimal> UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductQualifier", DbType="NVarChar(10)")]
		public string ProductQualifier
		{
			get
			{
				return this._ProductQualifier;
			}
			set
			{
				if ((this._ProductQualifier != value))
				{
					this.OnProductQualifierChanging(value);
					this.SendPropertyChanging();
					this._ProductQualifier = value;
					this.SendPropertyChanged("ProductQualifier");
					this.OnProductQualifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorProductCode", DbType="NVarChar(255)")]
		public string VendorProductCode
		{
			get
			{
				return this._VendorProductCode;
			}
			set
			{
				if ((this._VendorProductCode != value))
				{
					this.OnVendorProductCodeChanging(value);
					this.SendPropertyChanging();
					this._VendorProductCode = value;
					this.SendPropertyChanged("VendorProductCode");
					this.OnVendorProductCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyersCatalogQualifier", DbType="NVarChar(10)")]
		public string BuyersCatalogQualifier
		{
			get
			{
				return this._BuyersCatalogQualifier;
			}
			set
			{
				if ((this._BuyersCatalogQualifier != value))
				{
					this.OnBuyersCatalogQualifierChanging(value);
					this.SendPropertyChanging();
					this._BuyersCatalogQualifier = value;
					this.SendPropertyChanged("BuyersCatalogQualifier");
					this.OnBuyersCatalogQualifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyersProductCode", DbType="NVarChar(100)")]
		public string BuyersProductCode
		{
			get
			{
				return this._BuyersProductCode;
			}
			set
			{
				if ((this._BuyersProductCode != value))
				{
					this.OnBuyersProductCodeChanging(value);
					this.SendPropertyChanging();
					this._BuyersProductCode = value;
					this.SendPropertyChanged("BuyersProductCode");
					this.OnBuyersProductCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxTypeCode", DbType="NVarChar(2)")]
		public string TaxTypeCode
		{
			get
			{
				return this._TaxTypeCode;
			}
			set
			{
				if ((this._TaxTypeCode != value))
				{
					this.OnTaxTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._TaxTypeCode = value;
					this.SendPropertyChanged("TaxTypeCode");
					this.OnTaxTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxAmount", DbType="Float")]
		public System.Nullable<double> TaxAmount
		{
			get
			{
				return this._TaxAmount;
			}
			set
			{
				if ((this._TaxAmount != value))
				{
					this.OnTaxAmountChanging(value);
					this.SendPropertyChanging();
					this._TaxAmount = value;
					this.SendPropertyChanged("TaxAmount");
					this.OnTaxAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemDescriptionType", DbType="NVarChar(10)")]
		public string ItemDescriptionType
		{
			get
			{
				return this._ItemDescriptionType;
			}
			set
			{
				if ((this._ItemDescriptionType != value))
				{
					this.OnItemDescriptionTypeChanging(value);
					this.SendPropertyChanging();
					this._ItemDescriptionType = value;
					this.SendPropertyChanged("ItemDescriptionType");
					this.OnItemDescriptionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemDescription", DbType="NVarChar(1000)")]
		public string ItemDescription
		{
			get
			{
				return this._ItemDescription;
			}
			set
			{
				if ((this._ItemDescription != value))
				{
					this.OnItemDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ItemDescription = value;
					this.SendPropertyChanged("ItemDescription");
					this.OnItemDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractStartDate", DbType="Date")]
		public System.Nullable<System.DateTime> ContractStartDate
		{
			get
			{
				return this._ContractStartDate;
			}
			set
			{
				if ((this._ContractStartDate != value))
				{
					this.OnContractStartDateChanging(value);
					this.SendPropertyChanging();
					this._ContractStartDate = value;
					this.SendPropertyChanged("ContractStartDate");
					this.OnContractStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractEndDate", DbType="Date")]
		public System.Nullable<System.DateTime> ContractEndDate
		{
			get
			{
				return this._ContractEndDate;
			}
			set
			{
				if ((this._ContractEndDate != value))
				{
					this.OnContractEndDateChanging(value);
					this.SendPropertyChanging();
					this._ContractEndDate = value;
					this.SendPropertyChanged("ContractEndDate");
					this.OnContractEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_InvoiceDetail", Storage="_Invoice", ThisKey="InvoiceID", OtherKey="InvoiceID", IsForeignKey=true)]
		public Invoice Invoice
		{
			get
			{
				return this._Invoice.Entity;
			}
			set
			{
				Invoice previousValue = this._Invoice.Entity;
				if (((previousValue != value) 
							|| (this._Invoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Invoice.Entity = null;
						previousValue.InvoiceDetails.Remove(this);
					}
					this._Invoice.Entity = value;
					if ((value != null))
					{
						value.InvoiceDetails.Add(this);
						this._InvoiceID = value.InvoiceID;
					}
					else
					{
						this._InvoiceID = default(int);
					}
					this.SendPropertyChanged("Invoice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="edi.Invoices")]
	public partial class Invoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceID;
		
		private System.DateTime _InvoiceDate;
		
		private string _InvoiceNumber;
		
		private System.Nullable<int> _OrderID;
		
		private string _Account;
		
		private System.Nullable<int> _ApplicationID;
		
		private System.Nullable<int> _DealerID;
		
		private System.DateTime _PODate;
		
		private string _PONumber;
		
		private string _TxnTypeCode;
		
		private string _InvoiceMessage;
		
		private string _BillingEntityIDCode;
		
		private string _BillingCompanyName;
		
		private string _BillingAddress1;
		
		private string _BillingAddress2;
		
		private string _BillingAddress3;
		
		private string _BillingAddress4;
		
		private string _BillingStateProvinceCode;
		
		private string _BillingPostalCode;
		
		private string _BillingCountryCode;
		
		private string _RemitEntityIDCode;
		
		private string _RemitCompanyName;
		
		private string _ShippingEntityIDCode;
		
		private string _ShippingCompanyName;
		
		private string _ShippingAddress1;
		
		private string _ShippingAddress2;
		
		private string _ShippingAddress3;
		
		private string _ShippingAddress4;
		
		private string _ShippingStateProvinceCode;
		
		private string _ShippingPostalCode;
		
		private string _ShippingCountryCode;
		
		private System.Nullable<int> _InvoiceTermID;
		
		private System.Nullable<int> _InvoiceTermDateCodeID;
		
		private System.Nullable<System.DateTime> _NetDueDate;
		
		private System.Nullable<decimal> _TotalDiscountAmount;
		
		private string _TermsDescription;
		
		private System.Nullable<decimal> _TotalInvoiceAmount;
		
		private System.Nullable<int> _SummaryLineItems;
		
		private System.Nullable<int> _TotalSegments;
		
		private System.Nullable<int> _TransactionSetCtlNumber;
		
		private System.Nullable<System.DateTime> _TransferDate;
		
		private string _TransferErrorMessage;
		
		private bool _TransferSuccess;
		
		private System.DateTime _CreatedDate;
		
		private EntitySet<InvoiceCarrierDetail> _InvoiceCarrierDetails;
		
		private EntitySet<InvoiceCharge> _InvoiceCharges;
		
		private EntitySet<InvoiceDetail> _InvoiceDetails;
		
		private EntityRef<Application> _Application;
		
		private EntityRef<InvoiceTermDateCode> _InvoiceTermDateCode;
		
		private EntityRef<InvoiceTerm> _InvoiceTerm;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceIDChanging(int value);
    partial void OnInvoiceIDChanged();
    partial void OnInvoiceDateChanging(System.DateTime value);
    partial void OnInvoiceDateChanged();
    partial void OnInvoiceNumberChanging(string value);
    partial void OnInvoiceNumberChanged();
    partial void OnOrderIDChanging(System.Nullable<int> value);
    partial void OnOrderIDChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    partial void OnApplicationIDChanging(System.Nullable<int> value);
    partial void OnApplicationIDChanged();
    partial void OnDealerIDChanging(System.Nullable<int> value);
    partial void OnDealerIDChanged();
    partial void OnPODateChanging(System.DateTime value);
    partial void OnPODateChanged();
    partial void OnPONumberChanging(string value);
    partial void OnPONumberChanged();
    partial void OnTxnTypeCodeChanging(string value);
    partial void OnTxnTypeCodeChanged();
    partial void OnInvoiceMessageChanging(string value);
    partial void OnInvoiceMessageChanged();
    partial void OnBillingEntityIDCodeChanging(string value);
    partial void OnBillingEntityIDCodeChanged();
    partial void OnBillingCompanyNameChanging(string value);
    partial void OnBillingCompanyNameChanged();
    partial void OnBillingAddress1Changing(string value);
    partial void OnBillingAddress1Changed();
    partial void OnBillingAddress2Changing(string value);
    partial void OnBillingAddress2Changed();
    partial void OnBillingAddress3Changing(string value);
    partial void OnBillingAddress3Changed();
    partial void OnBillingAddress4Changing(string value);
    partial void OnBillingAddress4Changed();
    partial void OnBillingStateProvinceCodeChanging(string value);
    partial void OnBillingStateProvinceCodeChanged();
    partial void OnBillingPostalCodeChanging(string value);
    partial void OnBillingPostalCodeChanged();
    partial void OnBillingCountryCodeChanging(string value);
    partial void OnBillingCountryCodeChanged();
    partial void OnRemitEntityIDCodeChanging(string value);
    partial void OnRemitEntityIDCodeChanged();
    partial void OnRemitCompanyNameChanging(string value);
    partial void OnRemitCompanyNameChanged();
    partial void OnShippingEntityIDCodeChanging(string value);
    partial void OnShippingEntityIDCodeChanged();
    partial void OnShippingCompanyNameChanging(string value);
    partial void OnShippingCompanyNameChanged();
    partial void OnShippingAddress1Changing(string value);
    partial void OnShippingAddress1Changed();
    partial void OnShippingAddress2Changing(string value);
    partial void OnShippingAddress2Changed();
    partial void OnShippingAddress3Changing(string value);
    partial void OnShippingAddress3Changed();
    partial void OnShippingAddress4Changing(string value);
    partial void OnShippingAddress4Changed();
    partial void OnShippingStateProvinceCodeChanging(string value);
    partial void OnShippingStateProvinceCodeChanged();
    partial void OnShippingPostalCodeChanging(string value);
    partial void OnShippingPostalCodeChanged();
    partial void OnShippingCountryCodeChanging(string value);
    partial void OnShippingCountryCodeChanged();
    partial void OnInvoiceTermIDChanging(System.Nullable<int> value);
    partial void OnInvoiceTermIDChanged();
    partial void OnInvoiceTermDateCodeIDChanging(System.Nullable<int> value);
    partial void OnInvoiceTermDateCodeIDChanged();
    partial void OnNetDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNetDueDateChanged();
    partial void OnTotalDiscountAmountChanging(System.Nullable<decimal> value);
    partial void OnTotalDiscountAmountChanged();
    partial void OnTermsDescriptionChanging(string value);
    partial void OnTermsDescriptionChanged();
    partial void OnTotalInvoiceAmountChanging(System.Nullable<decimal> value);
    partial void OnTotalInvoiceAmountChanged();
    partial void OnSummaryLineItemsChanging(System.Nullable<int> value);
    partial void OnSummaryLineItemsChanged();
    partial void OnTotalSegmentsChanging(System.Nullable<int> value);
    partial void OnTotalSegmentsChanged();
    partial void OnTransactionSetCtlNumberChanging(System.Nullable<int> value);
    partial void OnTransactionSetCtlNumberChanged();
    partial void OnTransferDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTransferDateChanged();
    partial void OnTransferErrorMessageChanging(string value);
    partial void OnTransferErrorMessageChanged();
    partial void OnTransferSuccessChanging(bool value);
    partial void OnTransferSuccessChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public Invoice()
		{
			this._InvoiceCarrierDetails = new EntitySet<InvoiceCarrierDetail>(new Action<InvoiceCarrierDetail>(this.attach_InvoiceCarrierDetails), new Action<InvoiceCarrierDetail>(this.detach_InvoiceCarrierDetails));
			this._InvoiceCharges = new EntitySet<InvoiceCharge>(new Action<InvoiceCharge>(this.attach_InvoiceCharges), new Action<InvoiceCharge>(this.detach_InvoiceCharges));
			this._InvoiceDetails = new EntitySet<InvoiceDetail>(new Action<InvoiceDetail>(this.attach_InvoiceDetails), new Action<InvoiceDetail>(this.detach_InvoiceDetails));
			this._Application = default(EntityRef<Application>);
			this._InvoiceTermDateCode = default(EntityRef<InvoiceTermDateCode>);
			this._InvoiceTerm = default(EntityRef<InvoiceTerm>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDate", DbType="Date NOT NULL")]
		public System.DateTime InvoiceDate
		{
			get
			{
				return this._InvoiceDate;
			}
			set
			{
				if ((this._InvoiceDate != value))
				{
					this.OnInvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDate = value;
					this.SendPropertyChanged("InvoiceDate");
					this.OnInvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNumber", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string InvoiceNumber
		{
			get
			{
				return this._InvoiceNumber;
			}
			set
			{
				if ((this._InvoiceNumber != value))
				{
					this.OnInvoiceNumberChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNumber = value;
					this.SendPropertyChanged("InvoiceNumber");
					this.OnInvoiceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int")]
		public System.Nullable<int> OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this.OnAccountChanging(value);
					this.SendPropertyChanging();
					this._Account = value;
					this.SendPropertyChanged("Account");
					this.OnAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="Int")]
		public System.Nullable<int> ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					if (this._Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationID = value;
					this.SendPropertyChanged("ApplicationID");
					this.OnApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealerID", DbType="Int")]
		public System.Nullable<int> DealerID
		{
			get
			{
				return this._DealerID;
			}
			set
			{
				if ((this._DealerID != value))
				{
					this.OnDealerIDChanging(value);
					this.SendPropertyChanging();
					this._DealerID = value;
					this.SendPropertyChanged("DealerID");
					this.OnDealerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PODate", DbType="DateTime NOT NULL")]
		public System.DateTime PODate
		{
			get
			{
				return this._PODate;
			}
			set
			{
				if ((this._PODate != value))
				{
					this.OnPODateChanging(value);
					this.SendPropertyChanging();
					this._PODate = value;
					this.SendPropertyChanged("PODate");
					this.OnPODateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PONumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PONumber
		{
			get
			{
				return this._PONumber;
			}
			set
			{
				if ((this._PONumber != value))
				{
					this.OnPONumberChanging(value);
					this.SendPropertyChanging();
					this._PONumber = value;
					this.SendPropertyChanged("PONumber");
					this.OnPONumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TxnTypeCode", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string TxnTypeCode
		{
			get
			{
				return this._TxnTypeCode;
			}
			set
			{
				if ((this._TxnTypeCode != value))
				{
					this.OnTxnTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._TxnTypeCode = value;
					this.SendPropertyChanged("TxnTypeCode");
					this.OnTxnTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceMessage", DbType="NVarChar(255)")]
		public string InvoiceMessage
		{
			get
			{
				return this._InvoiceMessage;
			}
			set
			{
				if ((this._InvoiceMessage != value))
				{
					this.OnInvoiceMessageChanging(value);
					this.SendPropertyChanging();
					this._InvoiceMessage = value;
					this.SendPropertyChanged("InvoiceMessage");
					this.OnInvoiceMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingEntityIDCode", DbType="NVarChar(3)")]
		public string BillingEntityIDCode
		{
			get
			{
				return this._BillingEntityIDCode;
			}
			set
			{
				if ((this._BillingEntityIDCode != value))
				{
					this.OnBillingEntityIDCodeChanging(value);
					this.SendPropertyChanging();
					this._BillingEntityIDCode = value;
					this.SendPropertyChanged("BillingEntityIDCode");
					this.OnBillingEntityIDCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingCompanyName", DbType="NVarChar(255)")]
		public string BillingCompanyName
		{
			get
			{
				return this._BillingCompanyName;
			}
			set
			{
				if ((this._BillingCompanyName != value))
				{
					this.OnBillingCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._BillingCompanyName = value;
					this.SendPropertyChanged("BillingCompanyName");
					this.OnBillingCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingAddress1", DbType="NVarChar(255)")]
		public string BillingAddress1
		{
			get
			{
				return this._BillingAddress1;
			}
			set
			{
				if ((this._BillingAddress1 != value))
				{
					this.OnBillingAddress1Changing(value);
					this.SendPropertyChanging();
					this._BillingAddress1 = value;
					this.SendPropertyChanged("BillingAddress1");
					this.OnBillingAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingAddress2", DbType="NVarChar(255)")]
		public string BillingAddress2
		{
			get
			{
				return this._BillingAddress2;
			}
			set
			{
				if ((this._BillingAddress2 != value))
				{
					this.OnBillingAddress2Changing(value);
					this.SendPropertyChanging();
					this._BillingAddress2 = value;
					this.SendPropertyChanged("BillingAddress2");
					this.OnBillingAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingAddress3", DbType="NVarChar(100)")]
		public string BillingAddress3
		{
			get
			{
				return this._BillingAddress3;
			}
			set
			{
				if ((this._BillingAddress3 != value))
				{
					this.OnBillingAddress3Changing(value);
					this.SendPropertyChanging();
					this._BillingAddress3 = value;
					this.SendPropertyChanged("BillingAddress3");
					this.OnBillingAddress3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingAddress4", DbType="NVarChar(100)")]
		public string BillingAddress4
		{
			get
			{
				return this._BillingAddress4;
			}
			set
			{
				if ((this._BillingAddress4 != value))
				{
					this.OnBillingAddress4Changing(value);
					this.SendPropertyChanging();
					this._BillingAddress4 = value;
					this.SendPropertyChanged("BillingAddress4");
					this.OnBillingAddress4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingStateProvinceCode", DbType="NVarChar(100)")]
		public string BillingStateProvinceCode
		{
			get
			{
				return this._BillingStateProvinceCode;
			}
			set
			{
				if ((this._BillingStateProvinceCode != value))
				{
					this.OnBillingStateProvinceCodeChanging(value);
					this.SendPropertyChanging();
					this._BillingStateProvinceCode = value;
					this.SendPropertyChanged("BillingStateProvinceCode");
					this.OnBillingStateProvinceCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingPostalCode", DbType="NVarChar(30)")]
		public string BillingPostalCode
		{
			get
			{
				return this._BillingPostalCode;
			}
			set
			{
				if ((this._BillingPostalCode != value))
				{
					this.OnBillingPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._BillingPostalCode = value;
					this.SendPropertyChanged("BillingPostalCode");
					this.OnBillingPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingCountryCode", DbType="NVarChar(3)")]
		public string BillingCountryCode
		{
			get
			{
				return this._BillingCountryCode;
			}
			set
			{
				if ((this._BillingCountryCode != value))
				{
					this.OnBillingCountryCodeChanging(value);
					this.SendPropertyChanging();
					this._BillingCountryCode = value;
					this.SendPropertyChanged("BillingCountryCode");
					this.OnBillingCountryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemitEntityIDCode", DbType="NVarChar(3)")]
		public string RemitEntityIDCode
		{
			get
			{
				return this._RemitEntityIDCode;
			}
			set
			{
				if ((this._RemitEntityIDCode != value))
				{
					this.OnRemitEntityIDCodeChanging(value);
					this.SendPropertyChanging();
					this._RemitEntityIDCode = value;
					this.SendPropertyChanged("RemitEntityIDCode");
					this.OnRemitEntityIDCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemitCompanyName", DbType="NVarChar(255)")]
		public string RemitCompanyName
		{
			get
			{
				return this._RemitCompanyName;
			}
			set
			{
				if ((this._RemitCompanyName != value))
				{
					this.OnRemitCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._RemitCompanyName = value;
					this.SendPropertyChanged("RemitCompanyName");
					this.OnRemitCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingEntityIDCode", DbType="NVarChar(3)")]
		public string ShippingEntityIDCode
		{
			get
			{
				return this._ShippingEntityIDCode;
			}
			set
			{
				if ((this._ShippingEntityIDCode != value))
				{
					this.OnShippingEntityIDCodeChanging(value);
					this.SendPropertyChanging();
					this._ShippingEntityIDCode = value;
					this.SendPropertyChanged("ShippingEntityIDCode");
					this.OnShippingEntityIDCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingCompanyName", DbType="NVarChar(255)")]
		public string ShippingCompanyName
		{
			get
			{
				return this._ShippingCompanyName;
			}
			set
			{
				if ((this._ShippingCompanyName != value))
				{
					this.OnShippingCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._ShippingCompanyName = value;
					this.SendPropertyChanged("ShippingCompanyName");
					this.OnShippingCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingAddress1", DbType="NVarChar(255)")]
		public string ShippingAddress1
		{
			get
			{
				return this._ShippingAddress1;
			}
			set
			{
				if ((this._ShippingAddress1 != value))
				{
					this.OnShippingAddress1Changing(value);
					this.SendPropertyChanging();
					this._ShippingAddress1 = value;
					this.SendPropertyChanged("ShippingAddress1");
					this.OnShippingAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingAddress2", DbType="NVarChar(255)")]
		public string ShippingAddress2
		{
			get
			{
				return this._ShippingAddress2;
			}
			set
			{
				if ((this._ShippingAddress2 != value))
				{
					this.OnShippingAddress2Changing(value);
					this.SendPropertyChanging();
					this._ShippingAddress2 = value;
					this.SendPropertyChanged("ShippingAddress2");
					this.OnShippingAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingAddress3", DbType="NVarChar(100)")]
		public string ShippingAddress3
		{
			get
			{
				return this._ShippingAddress3;
			}
			set
			{
				if ((this._ShippingAddress3 != value))
				{
					this.OnShippingAddress3Changing(value);
					this.SendPropertyChanging();
					this._ShippingAddress3 = value;
					this.SendPropertyChanged("ShippingAddress3");
					this.OnShippingAddress3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingAddress4", DbType="NVarChar(100)")]
		public string ShippingAddress4
		{
			get
			{
				return this._ShippingAddress4;
			}
			set
			{
				if ((this._ShippingAddress4 != value))
				{
					this.OnShippingAddress4Changing(value);
					this.SendPropertyChanging();
					this._ShippingAddress4 = value;
					this.SendPropertyChanged("ShippingAddress4");
					this.OnShippingAddress4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingStateProvinceCode", DbType="NVarChar(100)")]
		public string ShippingStateProvinceCode
		{
			get
			{
				return this._ShippingStateProvinceCode;
			}
			set
			{
				if ((this._ShippingStateProvinceCode != value))
				{
					this.OnShippingStateProvinceCodeChanging(value);
					this.SendPropertyChanging();
					this._ShippingStateProvinceCode = value;
					this.SendPropertyChanged("ShippingStateProvinceCode");
					this.OnShippingStateProvinceCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingPostalCode", DbType="NVarChar(30)")]
		public string ShippingPostalCode
		{
			get
			{
				return this._ShippingPostalCode;
			}
			set
			{
				if ((this._ShippingPostalCode != value))
				{
					this.OnShippingPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._ShippingPostalCode = value;
					this.SendPropertyChanged("ShippingPostalCode");
					this.OnShippingPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingCountryCode", DbType="NVarChar(3)")]
		public string ShippingCountryCode
		{
			get
			{
				return this._ShippingCountryCode;
			}
			set
			{
				if ((this._ShippingCountryCode != value))
				{
					this.OnShippingCountryCodeChanging(value);
					this.SendPropertyChanging();
					this._ShippingCountryCode = value;
					this.SendPropertyChanged("ShippingCountryCode");
					this.OnShippingCountryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceTermID", DbType="Int")]
		public System.Nullable<int> InvoiceTermID
		{
			get
			{
				return this._InvoiceTermID;
			}
			set
			{
				if ((this._InvoiceTermID != value))
				{
					if (this._InvoiceTerm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceTermIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceTermID = value;
					this.SendPropertyChanged("InvoiceTermID");
					this.OnInvoiceTermIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceTermDateCodeID", DbType="Int")]
		public System.Nullable<int> InvoiceTermDateCodeID
		{
			get
			{
				return this._InvoiceTermDateCodeID;
			}
			set
			{
				if ((this._InvoiceTermDateCodeID != value))
				{
					if (this._InvoiceTermDateCode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvoiceTermDateCodeIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceTermDateCodeID = value;
					this.SendPropertyChanged("InvoiceTermDateCodeID");
					this.OnInvoiceTermDateCodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetDueDate", DbType="Date")]
		public System.Nullable<System.DateTime> NetDueDate
		{
			get
			{
				return this._NetDueDate;
			}
			set
			{
				if ((this._NetDueDate != value))
				{
					this.OnNetDueDateChanging(value);
					this.SendPropertyChanging();
					this._NetDueDate = value;
					this.SendPropertyChanged("NetDueDate");
					this.OnNetDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscountAmount", DbType="Money")]
		public System.Nullable<decimal> TotalDiscountAmount
		{
			get
			{
				return this._TotalDiscountAmount;
			}
			set
			{
				if ((this._TotalDiscountAmount != value))
				{
					this.OnTotalDiscountAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalDiscountAmount = value;
					this.SendPropertyChanged("TotalDiscountAmount");
					this.OnTotalDiscountAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermsDescription", DbType="NVarChar(MAX)")]
		public string TermsDescription
		{
			get
			{
				return this._TermsDescription;
			}
			set
			{
				if ((this._TermsDescription != value))
				{
					this.OnTermsDescriptionChanging(value);
					this.SendPropertyChanging();
					this._TermsDescription = value;
					this.SendPropertyChanged("TermsDescription");
					this.OnTermsDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalInvoiceAmount", DbType="Money")]
		public System.Nullable<decimal> TotalInvoiceAmount
		{
			get
			{
				return this._TotalInvoiceAmount;
			}
			set
			{
				if ((this._TotalInvoiceAmount != value))
				{
					this.OnTotalInvoiceAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalInvoiceAmount = value;
					this.SendPropertyChanged("TotalInvoiceAmount");
					this.OnTotalInvoiceAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SummaryLineItems", DbType="Int")]
		public System.Nullable<int> SummaryLineItems
		{
			get
			{
				return this._SummaryLineItems;
			}
			set
			{
				if ((this._SummaryLineItems != value))
				{
					this.OnSummaryLineItemsChanging(value);
					this.SendPropertyChanging();
					this._SummaryLineItems = value;
					this.SendPropertyChanged("SummaryLineItems");
					this.OnSummaryLineItemsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSegments", DbType="Int")]
		public System.Nullable<int> TotalSegments
		{
			get
			{
				return this._TotalSegments;
			}
			set
			{
				if ((this._TotalSegments != value))
				{
					this.OnTotalSegmentsChanging(value);
					this.SendPropertyChanging();
					this._TotalSegments = value;
					this.SendPropertyChanged("TotalSegments");
					this.OnTotalSegmentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionSetCtlNumber", DbType="Int")]
		public System.Nullable<int> TransactionSetCtlNumber
		{
			get
			{
				return this._TransactionSetCtlNumber;
			}
			set
			{
				if ((this._TransactionSetCtlNumber != value))
				{
					this.OnTransactionSetCtlNumberChanging(value);
					this.SendPropertyChanging();
					this._TransactionSetCtlNumber = value;
					this.SendPropertyChanged("TransactionSetCtlNumber");
					this.OnTransactionSetCtlNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TransferDate
		{
			get
			{
				return this._TransferDate;
			}
			set
			{
				if ((this._TransferDate != value))
				{
					this.OnTransferDateChanging(value);
					this.SendPropertyChanging();
					this._TransferDate = value;
					this.SendPropertyChanged("TransferDate");
					this.OnTransferDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferErrorMessage", DbType="NVarChar(200)")]
		public string TransferErrorMessage
		{
			get
			{
				return this._TransferErrorMessage;
			}
			set
			{
				if ((this._TransferErrorMessage != value))
				{
					this.OnTransferErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._TransferErrorMessage = value;
					this.SendPropertyChanged("TransferErrorMessage");
					this.OnTransferErrorMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferSuccess", DbType="Bit NOT NULL")]
		public bool TransferSuccess
		{
			get
			{
				return this._TransferSuccess;
			}
			set
			{
				if ((this._TransferSuccess != value))
				{
					this.OnTransferSuccessChanging(value);
					this.SendPropertyChanging();
					this._TransferSuccess = value;
					this.SendPropertyChanged("TransferSuccess");
					this.OnTransferSuccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_InvoiceCarrierDetail", Storage="_InvoiceCarrierDetails", ThisKey="InvoiceID", OtherKey="InvoiceID")]
		public EntitySet<InvoiceCarrierDetail> InvoiceCarrierDetails
		{
			get
			{
				return this._InvoiceCarrierDetails;
			}
			set
			{
				this._InvoiceCarrierDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_InvoiceCharge", Storage="_InvoiceCharges", ThisKey="InvoiceID", OtherKey="InvoiceID")]
		public EntitySet<InvoiceCharge> InvoiceCharges
		{
			get
			{
				return this._InvoiceCharges;
			}
			set
			{
				this._InvoiceCharges.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_InvoiceDetail", Storage="_InvoiceDetails", ThisKey="InvoiceID", OtherKey="InvoiceID")]
		public EntitySet<InvoiceDetail> InvoiceDetails
		{
			get
			{
				return this._InvoiceDetails;
			}
			set
			{
				this._InvoiceDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_Invoice", Storage="_Application", ThisKey="ApplicationID", OtherKey="ApplicationID", IsForeignKey=true)]
		public Application Application
		{
			get
			{
				return this._Application.Entity;
			}
			set
			{
				Application previousValue = this._Application.Entity;
				if (((previousValue != value) 
							|| (this._Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Application.Entity = null;
						previousValue.Invoices.Remove(this);
					}
					this._Application.Entity = value;
					if ((value != null))
					{
						value.Invoices.Add(this);
						this._ApplicationID = value.ApplicationID;
					}
					else
					{
						this._ApplicationID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceTermDateCode_Invoice", Storage="_InvoiceTermDateCode", ThisKey="InvoiceTermDateCodeID", OtherKey="InvoiceTermDateCodeID", IsForeignKey=true)]
		public InvoiceTermDateCode InvoiceTermDateCode
		{
			get
			{
				return this._InvoiceTermDateCode.Entity;
			}
			set
			{
				InvoiceTermDateCode previousValue = this._InvoiceTermDateCode.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceTermDateCode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceTermDateCode.Entity = null;
						previousValue.Invoices.Remove(this);
					}
					this._InvoiceTermDateCode.Entity = value;
					if ((value != null))
					{
						value.Invoices.Add(this);
						this._InvoiceTermDateCodeID = value.InvoiceTermDateCodeID;
					}
					else
					{
						this._InvoiceTermDateCodeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("InvoiceTermDateCode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceTerm_Invoice", Storage="_InvoiceTerm", ThisKey="InvoiceTermID", OtherKey="InvoiceTermID", IsForeignKey=true)]
		public InvoiceTerm InvoiceTerm
		{
			get
			{
				return this._InvoiceTerm.Entity;
			}
			set
			{
				InvoiceTerm previousValue = this._InvoiceTerm.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceTerm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceTerm.Entity = null;
						previousValue.Invoices.Remove(this);
					}
					this._InvoiceTerm.Entity = value;
					if ((value != null))
					{
						value.Invoices.Add(this);
						this._InvoiceTermID = value.InvoiceTermID;
					}
					else
					{
						this._InvoiceTermID = default(Nullable<int>);
					}
					this.SendPropertyChanged("InvoiceTerm");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoiceCarrierDetails(InvoiceCarrierDetail entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = this;
		}
		
		private void detach_InvoiceCarrierDetails(InvoiceCarrierDetail entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = null;
		}
		
		private void attach_InvoiceCharges(InvoiceCharge entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = this;
		}
		
		private void detach_InvoiceCharges(InvoiceCharge entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = null;
		}
		
		private void attach_InvoiceDetails(InvoiceDetail entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = this;
		}
		
		private void detach_InvoiceDetails(InvoiceDetail entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="edi.InvoiceTermDateCodes")]
	public partial class InvoiceTermDateCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceTermDateCodeID;
		
		private string _TermsBasisCode;
		
		private string _TermsBasisDesc;
		
		private EntitySet<Invoice> _Invoices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceTermDateCodeIDChanging(int value);
    partial void OnInvoiceTermDateCodeIDChanged();
    partial void OnTermsBasisCodeChanging(string value);
    partial void OnTermsBasisCodeChanged();
    partial void OnTermsBasisDescChanging(string value);
    partial void OnTermsBasisDescChanged();
    #endregion
		
		public InvoiceTermDateCode()
		{
			this._Invoices = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoices), new Action<Invoice>(this.detach_Invoices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceTermDateCodeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InvoiceTermDateCodeID
		{
			get
			{
				return this._InvoiceTermDateCodeID;
			}
			set
			{
				if ((this._InvoiceTermDateCodeID != value))
				{
					this.OnInvoiceTermDateCodeIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceTermDateCodeID = value;
					this.SendPropertyChanged("InvoiceTermDateCodeID");
					this.OnInvoiceTermDateCodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermsBasisCode", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string TermsBasisCode
		{
			get
			{
				return this._TermsBasisCode;
			}
			set
			{
				if ((this._TermsBasisCode != value))
				{
					this.OnTermsBasisCodeChanging(value);
					this.SendPropertyChanging();
					this._TermsBasisCode = value;
					this.SendPropertyChanged("TermsBasisCode");
					this.OnTermsBasisCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermsBasisDesc", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string TermsBasisDesc
		{
			get
			{
				return this._TermsBasisDesc;
			}
			set
			{
				if ((this._TermsBasisDesc != value))
				{
					this.OnTermsBasisDescChanging(value);
					this.SendPropertyChanging();
					this._TermsBasisDesc = value;
					this.SendPropertyChanged("TermsBasisDesc");
					this.OnTermsBasisDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceTermDateCode_Invoice", Storage="_Invoices", ThisKey="InvoiceTermDateCodeID", OtherKey="InvoiceTermDateCodeID")]
		public EntitySet<Invoice> Invoices
		{
			get
			{
				return this._Invoices;
			}
			set
			{
				this._Invoices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceTermDateCode = this;
		}
		
		private void detach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceTermDateCode = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="edi.InvoiceTerms")]
	public partial class InvoiceTerm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceTermID;
		
		private string _TermsTypeCode;
		
		private string _PaymentTermsDesc;
		
		private EntitySet<Invoice> _Invoices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceTermIDChanging(int value);
    partial void OnInvoiceTermIDChanged();
    partial void OnTermsTypeCodeChanging(string value);
    partial void OnTermsTypeCodeChanged();
    partial void OnPaymentTermsDescChanging(string value);
    partial void OnPaymentTermsDescChanged();
    #endregion
		
		public InvoiceTerm()
		{
			this._Invoices = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoices), new Action<Invoice>(this.detach_Invoices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceTermID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InvoiceTermID
		{
			get
			{
				return this._InvoiceTermID;
			}
			set
			{
				if ((this._InvoiceTermID != value))
				{
					this.OnInvoiceTermIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceTermID = value;
					this.SendPropertyChanged("InvoiceTermID");
					this.OnInvoiceTermIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermsTypeCode", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string TermsTypeCode
		{
			get
			{
				return this._TermsTypeCode;
			}
			set
			{
				if ((this._TermsTypeCode != value))
				{
					this.OnTermsTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._TermsTypeCode = value;
					this.SendPropertyChanged("TermsTypeCode");
					this.OnTermsTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTermsDesc", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string PaymentTermsDesc
		{
			get
			{
				return this._PaymentTermsDesc;
			}
			set
			{
				if ((this._PaymentTermsDesc != value))
				{
					this.OnPaymentTermsDescChanging(value);
					this.SendPropertyChanging();
					this._PaymentTermsDesc = value;
					this.SendPropertyChanged("PaymentTermsDesc");
					this.OnPaymentTermsDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceTerm_Invoice", Storage="_Invoices", ThisKey="InvoiceTermID", OtherKey="InvoiceTermID")]
		public EntitySet<Invoice> Invoices
		{
			get
			{
				return this._Invoices;
			}
			set
			{
				this._Invoices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceTerm = this;
		}
		
		private void detach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceTerm = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="edi.ProductSKUs")]
	public partial class ProductSKUs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductSKUID;
		
		private int _ClientID;
		
		private string _ClientSKU;
		
		private string _SKU;
		
		private string _SKUDescription;
		
		private int _ApplicationID;
		
		private string _UnixProductCode;
		
		private EntitySet<PurchaseOrderDetail> _PurchaseOrderDetails;
		
		private EntityRef<Application> _Application;
		
		private EntityRef<Client> _Client;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductSKUIDChanging(int value);
    partial void OnProductSKUIDChanged();
    partial void OnClientIDChanging(int value);
    partial void OnClientIDChanged();
    partial void OnClientSKUChanging(string value);
    partial void OnClientSKUChanged();
    partial void OnSKUChanging(string value);
    partial void OnSKUChanged();
    partial void OnSKUDescriptionChanging(string value);
    partial void OnSKUDescriptionChanged();
    partial void OnApplicationIDChanging(int value);
    partial void OnApplicationIDChanged();
    partial void OnUnixProductCodeChanging(string value);
    partial void OnUnixProductCodeChanged();
    #endregion
		
		public ProductSKUs()
		{
			this._PurchaseOrderDetails = new EntitySet<PurchaseOrderDetail>(new Action<PurchaseOrderDetail>(this.attach_PurchaseOrderDetails), new Action<PurchaseOrderDetail>(this.detach_PurchaseOrderDetails));
			this._Application = default(EntityRef<Application>);
			this._Client = default(EntityRef<Client>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductSKUID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductSKUID
		{
			get
			{
				return this._ProductSKUID;
			}
			set
			{
				if ((this._ProductSKUID != value))
				{
					this.OnProductSKUIDChanging(value);
					this.SendPropertyChanging();
					this._ProductSKUID = value;
					this.SendPropertyChanged("ProductSKUID");
					this.OnProductSKUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="Int NOT NULL")]
		public int ClientID
		{
			get
			{
				return this._ClientID;
			}
			set
			{
				if ((this._ClientID != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIDChanging(value);
					this.SendPropertyChanging();
					this._ClientID = value;
					this.SendPropertyChanged("ClientID");
					this.OnClientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientSKU", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string ClientSKU
		{
			get
			{
				return this._ClientSKU;
			}
			set
			{
				if ((this._ClientSKU != value))
				{
					this.OnClientSKUChanging(value);
					this.SendPropertyChanging();
					this._ClientSKU = value;
					this.SendPropertyChanged("ClientSKU");
					this.OnClientSKUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SKU", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string SKU
		{
			get
			{
				return this._SKU;
			}
			set
			{
				if ((this._SKU != value))
				{
					this.OnSKUChanging(value);
					this.SendPropertyChanging();
					this._SKU = value;
					this.SendPropertyChanged("SKU");
					this.OnSKUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SKUDescription", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SKUDescription
		{
			get
			{
				return this._SKUDescription;
			}
			set
			{
				if ((this._SKUDescription != value))
				{
					this.OnSKUDescriptionChanging(value);
					this.SendPropertyChanging();
					this._SKUDescription = value;
					this.SendPropertyChanged("SKUDescription");
					this.OnSKUDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="Int NOT NULL")]
		public int ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					if (this._Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationID = value;
					this.SendPropertyChanged("ApplicationID");
					this.OnApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnixProductCode", DbType="NVarChar(10)")]
		public string UnixProductCode
		{
			get
			{
				return this._UnixProductCode;
			}
			set
			{
				if ((this._UnixProductCode != value))
				{
					this.OnUnixProductCodeChanging(value);
					this.SendPropertyChanging();
					this._UnixProductCode = value;
					this.SendPropertyChanged("UnixProductCode");
					this.OnUnixProductCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductSKUs_PurchaseOrderDetail", Storage="_PurchaseOrderDetails", ThisKey="ProductSKUID", OtherKey="ProductSKUID")]
		public EntitySet<PurchaseOrderDetail> PurchaseOrderDetails
		{
			get
			{
				return this._PurchaseOrderDetails;
			}
			set
			{
				this._PurchaseOrderDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ProductSKUs", Storage="_Application", ThisKey="ApplicationID", OtherKey="ApplicationID", IsForeignKey=true)]
		public Application Application
		{
			get
			{
				return this._Application.Entity;
			}
			set
			{
				Application previousValue = this._Application.Entity;
				if (((previousValue != value) 
							|| (this._Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Application.Entity = null;
						previousValue.ProductSKUs.Remove(this);
					}
					this._Application.Entity = value;
					if ((value != null))
					{
						value.ProductSKUs.Add(this);
						this._ApplicationID = value.ApplicationID;
					}
					else
					{
						this._ApplicationID = default(int);
					}
					this.SendPropertyChanged("Application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_ProductSKUs", Storage="_Client", ThisKey="ClientID", OtherKey="ClientID", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.ProductSKUs.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.ProductSKUs.Add(this);
						this._ClientID = value.ClientID;
					}
					else
					{
						this._ClientID = default(int);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PurchaseOrderDetails(PurchaseOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.ProductSKUs = this;
		}
		
		private void detach_PurchaseOrderDetails(PurchaseOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.ProductSKUs = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="edi.PurchaseOrderAckDetails")]
	public partial class PurchaseOrderAckDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _POAckDetailID;
		
		private int _PurchaseOrderAckID;
		
		private System.Nullable<int> _POAckDetailLineNum;
		
		private System.Nullable<int> _Quantity;
		
		private string _UnitMeasurement;
		
		private System.Nullable<double> _UnitPrice;
		
		private string _ProductQualifier;
		
		private string _VendorProductCode;
		
		private string _BuyersCatalogQualifier;
		
		private string _HSIProductCode;
		
		private string _LineItemStatusCode;
		
		private System.Nullable<int> _AckQuantity;
		
		private string _AckDateQualifier;
		
		private System.Nullable<System.DateTime> _ScheduledShipDate;
		
		private EntityRef<PurchaseOrderAck> _PurchaseOrderAck;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPOAckDetailIDChanging(int value);
    partial void OnPOAckDetailIDChanged();
    partial void OnPurchaseOrderAckIDChanging(int value);
    partial void OnPurchaseOrderAckIDChanged();
    partial void OnPOAckDetailLineNumChanging(System.Nullable<int> value);
    partial void OnPOAckDetailLineNumChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnUnitMeasurementChanging(string value);
    partial void OnUnitMeasurementChanged();
    partial void OnUnitPriceChanging(System.Nullable<double> value);
    partial void OnUnitPriceChanged();
    partial void OnProductQualifierChanging(string value);
    partial void OnProductQualifierChanged();
    partial void OnVendorProductCodeChanging(string value);
    partial void OnVendorProductCodeChanged();
    partial void OnBuyersCatalogQualifierChanging(string value);
    partial void OnBuyersCatalogQualifierChanged();
    partial void OnHSIProductCodeChanging(string value);
    partial void OnHSIProductCodeChanged();
    partial void OnLineItemStatusCodeChanging(string value);
    partial void OnLineItemStatusCodeChanged();
    partial void OnAckQuantityChanging(System.Nullable<int> value);
    partial void OnAckQuantityChanged();
    partial void OnAckDateQualifierChanging(string value);
    partial void OnAckDateQualifierChanged();
    partial void OnScheduledShipDateChanging(System.Nullable<System.DateTime> value);
    partial void OnScheduledShipDateChanged();
    #endregion
		
		public PurchaseOrderAckDetail()
		{
			this._PurchaseOrderAck = default(EntityRef<PurchaseOrderAck>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POAckDetailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int POAckDetailID
		{
			get
			{
				return this._POAckDetailID;
			}
			set
			{
				if ((this._POAckDetailID != value))
				{
					this.OnPOAckDetailIDChanging(value);
					this.SendPropertyChanging();
					this._POAckDetailID = value;
					this.SendPropertyChanged("POAckDetailID");
					this.OnPOAckDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrderAckID", DbType="Int NOT NULL")]
		public int PurchaseOrderAckID
		{
			get
			{
				return this._PurchaseOrderAckID;
			}
			set
			{
				if ((this._PurchaseOrderAckID != value))
				{
					if (this._PurchaseOrderAck.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPurchaseOrderAckIDChanging(value);
					this.SendPropertyChanging();
					this._PurchaseOrderAckID = value;
					this.SendPropertyChanged("PurchaseOrderAckID");
					this.OnPurchaseOrderAckIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POAckDetailLineNum", DbType="Int")]
		public System.Nullable<int> POAckDetailLineNum
		{
			get
			{
				return this._POAckDetailLineNum;
			}
			set
			{
				if ((this._POAckDetailLineNum != value))
				{
					this.OnPOAckDetailLineNumChanging(value);
					this.SendPropertyChanging();
					this._POAckDetailLineNum = value;
					this.SendPropertyChanged("POAckDetailLineNum");
					this.OnPOAckDetailLineNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitMeasurement", DbType="NVarChar(10)")]
		public string UnitMeasurement
		{
			get
			{
				return this._UnitMeasurement;
			}
			set
			{
				if ((this._UnitMeasurement != value))
				{
					this.OnUnitMeasurementChanging(value);
					this.SendPropertyChanging();
					this._UnitMeasurement = value;
					this.SendPropertyChanged("UnitMeasurement");
					this.OnUnitMeasurementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Float")]
		public System.Nullable<double> UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductQualifier", DbType="NVarChar(10)")]
		public string ProductQualifier
		{
			get
			{
				return this._ProductQualifier;
			}
			set
			{
				if ((this._ProductQualifier != value))
				{
					this.OnProductQualifierChanging(value);
					this.SendPropertyChanging();
					this._ProductQualifier = value;
					this.SendPropertyChanged("ProductQualifier");
					this.OnProductQualifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorProductCode", DbType="NVarChar(255)")]
		public string VendorProductCode
		{
			get
			{
				return this._VendorProductCode;
			}
			set
			{
				if ((this._VendorProductCode != value))
				{
					this.OnVendorProductCodeChanging(value);
					this.SendPropertyChanging();
					this._VendorProductCode = value;
					this.SendPropertyChanged("VendorProductCode");
					this.OnVendorProductCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyersCatalogQualifier", DbType="NVarChar(10)")]
		public string BuyersCatalogQualifier
		{
			get
			{
				return this._BuyersCatalogQualifier;
			}
			set
			{
				if ((this._BuyersCatalogQualifier != value))
				{
					this.OnBuyersCatalogQualifierChanging(value);
					this.SendPropertyChanging();
					this._BuyersCatalogQualifier = value;
					this.SendPropertyChanged("BuyersCatalogQualifier");
					this.OnBuyersCatalogQualifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HSIProductCode", DbType="NVarChar(100)")]
		public string HSIProductCode
		{
			get
			{
				return this._HSIProductCode;
			}
			set
			{
				if ((this._HSIProductCode != value))
				{
					this.OnHSIProductCodeChanging(value);
					this.SendPropertyChanging();
					this._HSIProductCode = value;
					this.SendPropertyChanged("HSIProductCode");
					this.OnHSIProductCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineItemStatusCode", DbType="NVarChar(10)")]
		public string LineItemStatusCode
		{
			get
			{
				return this._LineItemStatusCode;
			}
			set
			{
				if ((this._LineItemStatusCode != value))
				{
					this.OnLineItemStatusCodeChanging(value);
					this.SendPropertyChanging();
					this._LineItemStatusCode = value;
					this.SendPropertyChanged("LineItemStatusCode");
					this.OnLineItemStatusCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AckQuantity", DbType="Int")]
		public System.Nullable<int> AckQuantity
		{
			get
			{
				return this._AckQuantity;
			}
			set
			{
				if ((this._AckQuantity != value))
				{
					this.OnAckQuantityChanging(value);
					this.SendPropertyChanging();
					this._AckQuantity = value;
					this.SendPropertyChanged("AckQuantity");
					this.OnAckQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AckDateQualifier", DbType="NVarChar(10)")]
		public string AckDateQualifier
		{
			get
			{
				return this._AckDateQualifier;
			}
			set
			{
				if ((this._AckDateQualifier != value))
				{
					this.OnAckDateQualifierChanging(value);
					this.SendPropertyChanging();
					this._AckDateQualifier = value;
					this.SendPropertyChanged("AckDateQualifier");
					this.OnAckDateQualifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduledShipDate", DbType="Date")]
		public System.Nullable<System.DateTime> ScheduledShipDate
		{
			get
			{
				return this._ScheduledShipDate;
			}
			set
			{
				if ((this._ScheduledShipDate != value))
				{
					this.OnScheduledShipDateChanging(value);
					this.SendPropertyChanging();
					this._ScheduledShipDate = value;
					this.SendPropertyChanged("ScheduledShipDate");
					this.OnScheduledShipDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseOrderAck_PurchaseOrderAckDetail", Storage="_PurchaseOrderAck", ThisKey="PurchaseOrderAckID", OtherKey="PurchaseOrderAckID", IsForeignKey=true)]
		public PurchaseOrderAck PurchaseOrderAck
		{
			get
			{
				return this._PurchaseOrderAck.Entity;
			}
			set
			{
				PurchaseOrderAck previousValue = this._PurchaseOrderAck.Entity;
				if (((previousValue != value) 
							|| (this._PurchaseOrderAck.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PurchaseOrderAck.Entity = null;
						previousValue.PurchaseOrderAckDetails.Remove(this);
					}
					this._PurchaseOrderAck.Entity = value;
					if ((value != null))
					{
						value.PurchaseOrderAckDetails.Add(this);
						this._PurchaseOrderAckID = value.PurchaseOrderAckID;
					}
					else
					{
						this._PurchaseOrderAckID = default(int);
					}
					this.SendPropertyChanged("PurchaseOrderAck");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="edi.PurchaseOrderAcks")]
	public partial class PurchaseOrderAck : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PurchaseOrderAckID;
		
		private System.Nullable<int> _PurchaseOrderID;
		
		private string _TxnSetPurposeCode;
		
		private string _AckTypeCode;
		
		private string _PONumber;
		
		private System.DateTime _PORequestDate;
		
		private string _POAckRefNumber;
		
		private System.Nullable<System.DateTime> _AcknowledgementDate;
		
		private string _EntityIDCode;
		
		private string _CustomerName;
		
		private string _CustomerIDQualifier;
		
		private string _CustomerIDCode;
		
		private System.Nullable<int> _SummaryLineItems;
		
		private System.Nullable<int> _TotalSegments;
		
		private int _TransactionSetCtlNumber;
		
		private string _TransferErrorMessage;
		
		private System.Nullable<System.DateTime> _TransferDate;
		
		private string _Account;
		
		private System.Nullable<int> _AppliactionID;
		
		private System.Nullable<int> _DealerID;
		
		private EntitySet<PurchaseOrderAckDetail> _PurchaseOrderAckDetails;
		
		private EntityRef<PurchaseOrder> _PurchaseOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPurchaseOrderAckIDChanging(int value);
    partial void OnPurchaseOrderAckIDChanged();
    partial void OnPurchaseOrderIDChanging(System.Nullable<int> value);
    partial void OnPurchaseOrderIDChanged();
    partial void OnTxnSetPurposeCodeChanging(string value);
    partial void OnTxnSetPurposeCodeChanged();
    partial void OnAckTypeCodeChanging(string value);
    partial void OnAckTypeCodeChanged();
    partial void OnPONumberChanging(string value);
    partial void OnPONumberChanged();
    partial void OnPORequestDateChanging(System.DateTime value);
    partial void OnPORequestDateChanged();
    partial void OnPOAckRefNumberChanging(string value);
    partial void OnPOAckRefNumberChanged();
    partial void OnAcknowledgementDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAcknowledgementDateChanged();
    partial void OnEntityIDCodeChanging(string value);
    partial void OnEntityIDCodeChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnCustomerIDQualifierChanging(string value);
    partial void OnCustomerIDQualifierChanged();
    partial void OnCustomerIDCodeChanging(string value);
    partial void OnCustomerIDCodeChanged();
    partial void OnSummaryLineItemsChanging(System.Nullable<int> value);
    partial void OnSummaryLineItemsChanged();
    partial void OnTotalSegmentsChanging(System.Nullable<int> value);
    partial void OnTotalSegmentsChanged();
    partial void OnTransactionSetCtlNumberChanging(int value);
    partial void OnTransactionSetCtlNumberChanged();
    partial void OnTransferErrorMessageChanging(string value);
    partial void OnTransferErrorMessageChanged();
    partial void OnTransferDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTransferDateChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    partial void OnAppliactionIDChanging(System.Nullable<int> value);
    partial void OnAppliactionIDChanged();
    partial void OnDealerIDChanging(System.Nullable<int> value);
    partial void OnDealerIDChanged();
    #endregion
		
		public PurchaseOrderAck()
		{
			this._PurchaseOrderAckDetails = new EntitySet<PurchaseOrderAckDetail>(new Action<PurchaseOrderAckDetail>(this.attach_PurchaseOrderAckDetails), new Action<PurchaseOrderAckDetail>(this.detach_PurchaseOrderAckDetails));
			this._PurchaseOrder = default(EntityRef<PurchaseOrder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrderAckID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PurchaseOrderAckID
		{
			get
			{
				return this._PurchaseOrderAckID;
			}
			set
			{
				if ((this._PurchaseOrderAckID != value))
				{
					this.OnPurchaseOrderAckIDChanging(value);
					this.SendPropertyChanging();
					this._PurchaseOrderAckID = value;
					this.SendPropertyChanged("PurchaseOrderAckID");
					this.OnPurchaseOrderAckIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrderID", DbType="Int")]
		public System.Nullable<int> PurchaseOrderID
		{
			get
			{
				return this._PurchaseOrderID;
			}
			set
			{
				if ((this._PurchaseOrderID != value))
				{
					if (this._PurchaseOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPurchaseOrderIDChanging(value);
					this.SendPropertyChanging();
					this._PurchaseOrderID = value;
					this.SendPropertyChanged("PurchaseOrderID");
					this.OnPurchaseOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TxnSetPurposeCode", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string TxnSetPurposeCode
		{
			get
			{
				return this._TxnSetPurposeCode;
			}
			set
			{
				if ((this._TxnSetPurposeCode != value))
				{
					this.OnTxnSetPurposeCodeChanging(value);
					this.SendPropertyChanging();
					this._TxnSetPurposeCode = value;
					this.SendPropertyChanged("TxnSetPurposeCode");
					this.OnTxnSetPurposeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AckTypeCode", DbType="NVarChar(2) NOT NULL", CanBeNull=false)]
		public string AckTypeCode
		{
			get
			{
				return this._AckTypeCode;
			}
			set
			{
				if ((this._AckTypeCode != value))
				{
					this.OnAckTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._AckTypeCode = value;
					this.SendPropertyChanged("AckTypeCode");
					this.OnAckTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PONumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PONumber
		{
			get
			{
				return this._PONumber;
			}
			set
			{
				if ((this._PONumber != value))
				{
					this.OnPONumberChanging(value);
					this.SendPropertyChanging();
					this._PONumber = value;
					this.SendPropertyChanged("PONumber");
					this.OnPONumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PORequestDate", DbType="DateTime NOT NULL")]
		public System.DateTime PORequestDate
		{
			get
			{
				return this._PORequestDate;
			}
			set
			{
				if ((this._PORequestDate != value))
				{
					this.OnPORequestDateChanging(value);
					this.SendPropertyChanging();
					this._PORequestDate = value;
					this.SendPropertyChanged("PORequestDate");
					this.OnPORequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POAckRefNumber", DbType="NVarChar(1000)")]
		public string POAckRefNumber
		{
			get
			{
				return this._POAckRefNumber;
			}
			set
			{
				if ((this._POAckRefNumber != value))
				{
					this.OnPOAckRefNumberChanging(value);
					this.SendPropertyChanging();
					this._POAckRefNumber = value;
					this.SendPropertyChanged("POAckRefNumber");
					this.OnPOAckRefNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcknowledgementDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AcknowledgementDate
		{
			get
			{
				return this._AcknowledgementDate;
			}
			set
			{
				if ((this._AcknowledgementDate != value))
				{
					this.OnAcknowledgementDateChanging(value);
					this.SendPropertyChanging();
					this._AcknowledgementDate = value;
					this.SendPropertyChanged("AcknowledgementDate");
					this.OnAcknowledgementDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityIDCode", DbType="NVarChar(3)")]
		public string EntityIDCode
		{
			get
			{
				return this._EntityIDCode;
			}
			set
			{
				if ((this._EntityIDCode != value))
				{
					this.OnEntityIDCodeChanging(value);
					this.SendPropertyChanging();
					this._EntityIDCode = value;
					this.SendPropertyChanged("EntityIDCode");
					this.OnEntityIDCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(255)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerIDQualifier", DbType="NVarChar(10)")]
		public string CustomerIDQualifier
		{
			get
			{
				return this._CustomerIDQualifier;
			}
			set
			{
				if ((this._CustomerIDQualifier != value))
				{
					this.OnCustomerIDQualifierChanging(value);
					this.SendPropertyChanging();
					this._CustomerIDQualifier = value;
					this.SendPropertyChanged("CustomerIDQualifier");
					this.OnCustomerIDQualifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerIDCode", DbType="NVarChar(255)")]
		public string CustomerIDCode
		{
			get
			{
				return this._CustomerIDCode;
			}
			set
			{
				if ((this._CustomerIDCode != value))
				{
					this.OnCustomerIDCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomerIDCode = value;
					this.SendPropertyChanged("CustomerIDCode");
					this.OnCustomerIDCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SummaryLineItems", DbType="Int")]
		public System.Nullable<int> SummaryLineItems
		{
			get
			{
				return this._SummaryLineItems;
			}
			set
			{
				if ((this._SummaryLineItems != value))
				{
					this.OnSummaryLineItemsChanging(value);
					this.SendPropertyChanging();
					this._SummaryLineItems = value;
					this.SendPropertyChanged("SummaryLineItems");
					this.OnSummaryLineItemsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSegments", DbType="Int")]
		public System.Nullable<int> TotalSegments
		{
			get
			{
				return this._TotalSegments;
			}
			set
			{
				if ((this._TotalSegments != value))
				{
					this.OnTotalSegmentsChanging(value);
					this.SendPropertyChanging();
					this._TotalSegments = value;
					this.SendPropertyChanged("TotalSegments");
					this.OnTotalSegmentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionSetCtlNumber", DbType="Int NOT NULL")]
		public int TransactionSetCtlNumber
		{
			get
			{
				return this._TransactionSetCtlNumber;
			}
			set
			{
				if ((this._TransactionSetCtlNumber != value))
				{
					this.OnTransactionSetCtlNumberChanging(value);
					this.SendPropertyChanging();
					this._TransactionSetCtlNumber = value;
					this.SendPropertyChanged("TransactionSetCtlNumber");
					this.OnTransactionSetCtlNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferErrorMessage", DbType="NVarChar(200)")]
		public string TransferErrorMessage
		{
			get
			{
				return this._TransferErrorMessage;
			}
			set
			{
				if ((this._TransferErrorMessage != value))
				{
					this.OnTransferErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._TransferErrorMessage = value;
					this.SendPropertyChanged("TransferErrorMessage");
					this.OnTransferErrorMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TransferDate
		{
			get
			{
				return this._TransferDate;
			}
			set
			{
				if ((this._TransferDate != value))
				{
					this.OnTransferDateChanging(value);
					this.SendPropertyChanging();
					this._TransferDate = value;
					this.SendPropertyChanged("TransferDate");
					this.OnTransferDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="NVarChar(8)")]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this.OnAccountChanging(value);
					this.SendPropertyChanging();
					this._Account = value;
					this.SendPropertyChanged("Account");
					this.OnAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppliactionID", DbType="Int")]
		public System.Nullable<int> AppliactionID
		{
			get
			{
				return this._AppliactionID;
			}
			set
			{
				if ((this._AppliactionID != value))
				{
					this.OnAppliactionIDChanging(value);
					this.SendPropertyChanging();
					this._AppliactionID = value;
					this.SendPropertyChanged("AppliactionID");
					this.OnAppliactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealerID", DbType="Int")]
		public System.Nullable<int> DealerID
		{
			get
			{
				return this._DealerID;
			}
			set
			{
				if ((this._DealerID != value))
				{
					this.OnDealerIDChanging(value);
					this.SendPropertyChanging();
					this._DealerID = value;
					this.SendPropertyChanged("DealerID");
					this.OnDealerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseOrderAck_PurchaseOrderAckDetail", Storage="_PurchaseOrderAckDetails", ThisKey="PurchaseOrderAckID", OtherKey="PurchaseOrderAckID")]
		public EntitySet<PurchaseOrderAckDetail> PurchaseOrderAckDetails
		{
			get
			{
				return this._PurchaseOrderAckDetails;
			}
			set
			{
				this._PurchaseOrderAckDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseOrder_PurchaseOrderAck", Storage="_PurchaseOrder", ThisKey="PurchaseOrderID", OtherKey="PurchaseOrderID", IsForeignKey=true)]
		public PurchaseOrder PurchaseOrder
		{
			get
			{
				return this._PurchaseOrder.Entity;
			}
			set
			{
				PurchaseOrder previousValue = this._PurchaseOrder.Entity;
				if (((previousValue != value) 
							|| (this._PurchaseOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PurchaseOrder.Entity = null;
						previousValue.PurchaseOrderAcks.Remove(this);
					}
					this._PurchaseOrder.Entity = value;
					if ((value != null))
					{
						value.PurchaseOrderAcks.Add(this);
						this._PurchaseOrderID = value.PurchaseOrderID;
					}
					else
					{
						this._PurchaseOrderID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PurchaseOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PurchaseOrderAckDetails(PurchaseOrderAckDetail entity)
		{
			this.SendPropertyChanging();
			entity.PurchaseOrderAck = this;
		}
		
		private void detach_PurchaseOrderAckDetails(PurchaseOrderAckDetail entity)
		{
			this.SendPropertyChanging();
			entity.PurchaseOrderAck = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="edi.PurchaseOrderContacts")]
	public partial class PurchaseOrderContact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PurchaseOrderContactID;
		
		private int _EDIPurchaseOrderID;
		
		private string _ContactFunctionCode;
		
		private string _CommNumberQualifier;
		
		private string _CommNumber;
		
		private EntityRef<PurchaseOrder> _PurchaseOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPurchaseOrderContactIDChanging(int value);
    partial void OnPurchaseOrderContactIDChanged();
    partial void OnEDIPurchaseOrderIDChanging(int value);
    partial void OnEDIPurchaseOrderIDChanged();
    partial void OnContactFunctionCodeChanging(string value);
    partial void OnContactFunctionCodeChanged();
    partial void OnCommNumberQualifierChanging(string value);
    partial void OnCommNumberQualifierChanged();
    partial void OnCommNumberChanging(string value);
    partial void OnCommNumberChanged();
    #endregion
		
		public PurchaseOrderContact()
		{
			this._PurchaseOrder = default(EntityRef<PurchaseOrder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrderContactID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PurchaseOrderContactID
		{
			get
			{
				return this._PurchaseOrderContactID;
			}
			set
			{
				if ((this._PurchaseOrderContactID != value))
				{
					this.OnPurchaseOrderContactIDChanging(value);
					this.SendPropertyChanging();
					this._PurchaseOrderContactID = value;
					this.SendPropertyChanged("PurchaseOrderContactID");
					this.OnPurchaseOrderContactIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDIPurchaseOrderID", DbType="Int NOT NULL")]
		public int EDIPurchaseOrderID
		{
			get
			{
				return this._EDIPurchaseOrderID;
			}
			set
			{
				if ((this._EDIPurchaseOrderID != value))
				{
					if (this._PurchaseOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEDIPurchaseOrderIDChanging(value);
					this.SendPropertyChanging();
					this._EDIPurchaseOrderID = value;
					this.SendPropertyChanged("EDIPurchaseOrderID");
					this.OnEDIPurchaseOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactFunctionCode", DbType="NVarChar(10)")]
		public string ContactFunctionCode
		{
			get
			{
				return this._ContactFunctionCode;
			}
			set
			{
				if ((this._ContactFunctionCode != value))
				{
					this.OnContactFunctionCodeChanging(value);
					this.SendPropertyChanging();
					this._ContactFunctionCode = value;
					this.SendPropertyChanged("ContactFunctionCode");
					this.OnContactFunctionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommNumberQualifier", DbType="NVarChar(10)")]
		public string CommNumberQualifier
		{
			get
			{
				return this._CommNumberQualifier;
			}
			set
			{
				if ((this._CommNumberQualifier != value))
				{
					this.OnCommNumberQualifierChanging(value);
					this.SendPropertyChanging();
					this._CommNumberQualifier = value;
					this.SendPropertyChanged("CommNumberQualifier");
					this.OnCommNumberQualifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommNumber", DbType="NVarChar(24)")]
		public string CommNumber
		{
			get
			{
				return this._CommNumber;
			}
			set
			{
				if ((this._CommNumber != value))
				{
					this.OnCommNumberChanging(value);
					this.SendPropertyChanging();
					this._CommNumber = value;
					this.SendPropertyChanged("CommNumber");
					this.OnCommNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseOrder_PurchaseOrderContact", Storage="_PurchaseOrder", ThisKey="EDIPurchaseOrderID", OtherKey="PurchaseOrderID", IsForeignKey=true)]
		public PurchaseOrder PurchaseOrder
		{
			get
			{
				return this._PurchaseOrder.Entity;
			}
			set
			{
				PurchaseOrder previousValue = this._PurchaseOrder.Entity;
				if (((previousValue != value) 
							|| (this._PurchaseOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PurchaseOrder.Entity = null;
						previousValue.PurchaseOrderContacts.Remove(this);
					}
					this._PurchaseOrder.Entity = value;
					if ((value != null))
					{
						value.PurchaseOrderContacts.Add(this);
						this._EDIPurchaseOrderID = value.PurchaseOrderID;
					}
					else
					{
						this._EDIPurchaseOrderID = default(int);
					}
					this.SendPropertyChanged("PurchaseOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="edi.PurchaseOrderDetails")]
	public partial class PurchaseOrderDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PODetailID;
		
		private int _EDIPOHeaderID;
		
		private System.Nullable<int> _PODetailLineNum;
		
		private System.Nullable<int> _Quantity;
		
		private string _UnitMeasurement;
		
		private System.Nullable<double> _UnitPrice;
		
		private string _ProductQualifier;
		
		private string _VendorProductCode;
		
		private string _BuyersCatalogQualifier;
		
		private string _HSIProductCode;
		
		private string _ItemDescription;
		
		private System.Nullable<int> _ProductSKUID;
		
		private System.Nullable<int> _PORequestNumber;
		
		private System.Nullable<int> _ApprovalErrorCode;
		
		private EntityRef<PurchaseOrder> _PurchaseOrder;
		
		private EntityRef<ProductSKUs> _ProductSKUs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPODetailIDChanging(int value);
    partial void OnPODetailIDChanged();
    partial void OnEDIPOHeaderIDChanging(int value);
    partial void OnEDIPOHeaderIDChanged();
    partial void OnPODetailLineNumChanging(System.Nullable<int> value);
    partial void OnPODetailLineNumChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnUnitMeasurementChanging(string value);
    partial void OnUnitMeasurementChanged();
    partial void OnUnitPriceChanging(System.Nullable<double> value);
    partial void OnUnitPriceChanged();
    partial void OnProductQualifierChanging(string value);
    partial void OnProductQualifierChanged();
    partial void OnVendorProductCodeChanging(string value);
    partial void OnVendorProductCodeChanged();
    partial void OnBuyersCatalogQualifierChanging(string value);
    partial void OnBuyersCatalogQualifierChanged();
    partial void OnHSIProductCodeChanging(string value);
    partial void OnHSIProductCodeChanged();
    partial void OnItemDescriptionChanging(string value);
    partial void OnItemDescriptionChanged();
    partial void OnProductSKUIDChanging(System.Nullable<int> value);
    partial void OnProductSKUIDChanged();
    partial void OnPORequestNumberChanging(System.Nullable<int> value);
    partial void OnPORequestNumberChanged();
    partial void OnApprovalErrorCodeChanging(System.Nullable<int> value);
    partial void OnApprovalErrorCodeChanged();
    #endregion
		
		public PurchaseOrderDetail()
		{
			this._PurchaseOrder = default(EntityRef<PurchaseOrder>);
			this._ProductSKUs = default(EntityRef<ProductSKUs>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PODetailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PODetailID
		{
			get
			{
				return this._PODetailID;
			}
			set
			{
				if ((this._PODetailID != value))
				{
					this.OnPODetailIDChanging(value);
					this.SendPropertyChanging();
					this._PODetailID = value;
					this.SendPropertyChanged("PODetailID");
					this.OnPODetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDIPOHeaderID", DbType="Int NOT NULL")]
		public int EDIPOHeaderID
		{
			get
			{
				return this._EDIPOHeaderID;
			}
			set
			{
				if ((this._EDIPOHeaderID != value))
				{
					if (this._PurchaseOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEDIPOHeaderIDChanging(value);
					this.SendPropertyChanging();
					this._EDIPOHeaderID = value;
					this.SendPropertyChanged("EDIPOHeaderID");
					this.OnEDIPOHeaderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PODetailLineNum", DbType="Int")]
		public System.Nullable<int> PODetailLineNum
		{
			get
			{
				return this._PODetailLineNum;
			}
			set
			{
				if ((this._PODetailLineNum != value))
				{
					this.OnPODetailLineNumChanging(value);
					this.SendPropertyChanging();
					this._PODetailLineNum = value;
					this.SendPropertyChanged("PODetailLineNum");
					this.OnPODetailLineNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitMeasurement", DbType="NVarChar(10)")]
		public string UnitMeasurement
		{
			get
			{
				return this._UnitMeasurement;
			}
			set
			{
				if ((this._UnitMeasurement != value))
				{
					this.OnUnitMeasurementChanging(value);
					this.SendPropertyChanging();
					this._UnitMeasurement = value;
					this.SendPropertyChanged("UnitMeasurement");
					this.OnUnitMeasurementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Float")]
		public System.Nullable<double> UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductQualifier", DbType="NVarChar(10)")]
		public string ProductQualifier
		{
			get
			{
				return this._ProductQualifier;
			}
			set
			{
				if ((this._ProductQualifier != value))
				{
					this.OnProductQualifierChanging(value);
					this.SendPropertyChanging();
					this._ProductQualifier = value;
					this.SendPropertyChanged("ProductQualifier");
					this.OnProductQualifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorProductCode", DbType="NVarChar(255)")]
		public string VendorProductCode
		{
			get
			{
				return this._VendorProductCode;
			}
			set
			{
				if ((this._VendorProductCode != value))
				{
					this.OnVendorProductCodeChanging(value);
					this.SendPropertyChanging();
					this._VendorProductCode = value;
					this.SendPropertyChanged("VendorProductCode");
					this.OnVendorProductCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyersCatalogQualifier", DbType="NVarChar(10)")]
		public string BuyersCatalogQualifier
		{
			get
			{
				return this._BuyersCatalogQualifier;
			}
			set
			{
				if ((this._BuyersCatalogQualifier != value))
				{
					this.OnBuyersCatalogQualifierChanging(value);
					this.SendPropertyChanging();
					this._BuyersCatalogQualifier = value;
					this.SendPropertyChanged("BuyersCatalogQualifier");
					this.OnBuyersCatalogQualifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HSIProductCode", DbType="NVarChar(100)")]
		public string HSIProductCode
		{
			get
			{
				return this._HSIProductCode;
			}
			set
			{
				if ((this._HSIProductCode != value))
				{
					this.OnHSIProductCodeChanging(value);
					this.SendPropertyChanging();
					this._HSIProductCode = value;
					this.SendPropertyChanged("HSIProductCode");
					this.OnHSIProductCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemDescription", DbType="NVarChar(255)")]
		public string ItemDescription
		{
			get
			{
				return this._ItemDescription;
			}
			set
			{
				if ((this._ItemDescription != value))
				{
					this.OnItemDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ItemDescription = value;
					this.SendPropertyChanged("ItemDescription");
					this.OnItemDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductSKUID", DbType="Int")]
		public System.Nullable<int> ProductSKUID
		{
			get
			{
				return this._ProductSKUID;
			}
			set
			{
				if ((this._ProductSKUID != value))
				{
					if (this._ProductSKUs.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductSKUIDChanging(value);
					this.SendPropertyChanging();
					this._ProductSKUID = value;
					this.SendPropertyChanged("ProductSKUID");
					this.OnProductSKUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PORequestNumber", DbType="Int")]
		public System.Nullable<int> PORequestNumber
		{
			get
			{
				return this._PORequestNumber;
			}
			set
			{
				if ((this._PORequestNumber != value))
				{
					this.OnPORequestNumberChanging(value);
					this.SendPropertyChanging();
					this._PORequestNumber = value;
					this.SendPropertyChanged("PORequestNumber");
					this.OnPORequestNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovalErrorCode", DbType="Int")]
		public System.Nullable<int> ApprovalErrorCode
		{
			get
			{
				return this._ApprovalErrorCode;
			}
			set
			{
				if ((this._ApprovalErrorCode != value))
				{
					this.OnApprovalErrorCodeChanging(value);
					this.SendPropertyChanging();
					this._ApprovalErrorCode = value;
					this.SendPropertyChanged("ApprovalErrorCode");
					this.OnApprovalErrorCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseOrder_PurchaseOrderDetail", Storage="_PurchaseOrder", ThisKey="EDIPOHeaderID", OtherKey="PurchaseOrderID", IsForeignKey=true)]
		public PurchaseOrder PurchaseOrder
		{
			get
			{
				return this._PurchaseOrder.Entity;
			}
			set
			{
				PurchaseOrder previousValue = this._PurchaseOrder.Entity;
				if (((previousValue != value) 
							|| (this._PurchaseOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PurchaseOrder.Entity = null;
						previousValue.PurchaseOrderDetails.Remove(this);
					}
					this._PurchaseOrder.Entity = value;
					if ((value != null))
					{
						value.PurchaseOrderDetails.Add(this);
						this._EDIPOHeaderID = value.PurchaseOrderID;
					}
					else
					{
						this._EDIPOHeaderID = default(int);
					}
					this.SendPropertyChanged("PurchaseOrder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductSKUs_PurchaseOrderDetail", Storage="_ProductSKUs", ThisKey="ProductSKUID", OtherKey="ProductSKUID", IsForeignKey=true)]
		public ProductSKUs ProductSKUs
		{
			get
			{
				return this._ProductSKUs.Entity;
			}
			set
			{
				ProductSKUs previousValue = this._ProductSKUs.Entity;
				if (((previousValue != value) 
							|| (this._ProductSKUs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductSKUs.Entity = null;
						previousValue.PurchaseOrderDetails.Remove(this);
					}
					this._ProductSKUs.Entity = value;
					if ((value != null))
					{
						value.PurchaseOrderDetails.Add(this);
						this._ProductSKUID = value.ProductSKUID;
					}
					else
					{
						this._ProductSKUID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProductSKUs");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="edi.PurchaseOrderRefs")]
	public partial class PurchaseOrderRef : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PurchaseOrderRefID;
		
		private int _EDIPurchaseOrderID;
		
		private string _IDQualifier;
		
		private string _ReferenceID;
		
		private EntityRef<PurchaseOrder> _PurchaseOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPurchaseOrderRefIDChanging(int value);
    partial void OnPurchaseOrderRefIDChanged();
    partial void OnEDIPurchaseOrderIDChanging(int value);
    partial void OnEDIPurchaseOrderIDChanged();
    partial void OnIDQualifierChanging(string value);
    partial void OnIDQualifierChanged();
    partial void OnReferenceIDChanging(string value);
    partial void OnReferenceIDChanged();
    #endregion
		
		public PurchaseOrderRef()
		{
			this._PurchaseOrder = default(EntityRef<PurchaseOrder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrderRefID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PurchaseOrderRefID
		{
			get
			{
				return this._PurchaseOrderRefID;
			}
			set
			{
				if ((this._PurchaseOrderRefID != value))
				{
					this.OnPurchaseOrderRefIDChanging(value);
					this.SendPropertyChanging();
					this._PurchaseOrderRefID = value;
					this.SendPropertyChanged("PurchaseOrderRefID");
					this.OnPurchaseOrderRefIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDIPurchaseOrderID", DbType="Int NOT NULL")]
		public int EDIPurchaseOrderID
		{
			get
			{
				return this._EDIPurchaseOrderID;
			}
			set
			{
				if ((this._EDIPurchaseOrderID != value))
				{
					if (this._PurchaseOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEDIPurchaseOrderIDChanging(value);
					this.SendPropertyChanging();
					this._EDIPurchaseOrderID = value;
					this.SendPropertyChanged("EDIPurchaseOrderID");
					this.OnEDIPurchaseOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDQualifier", DbType="NChar(2) NOT NULL", CanBeNull=false)]
		public string IDQualifier
		{
			get
			{
				return this._IDQualifier;
			}
			set
			{
				if ((this._IDQualifier != value))
				{
					this.OnIDQualifierChanging(value);
					this.SendPropertyChanging();
					this._IDQualifier = value;
					this.SendPropertyChanged("IDQualifier");
					this.OnIDQualifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ReferenceID
		{
			get
			{
				return this._ReferenceID;
			}
			set
			{
				if ((this._ReferenceID != value))
				{
					this.OnReferenceIDChanging(value);
					this.SendPropertyChanging();
					this._ReferenceID = value;
					this.SendPropertyChanged("ReferenceID");
					this.OnReferenceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseOrder_PurchaseOrderRef", Storage="_PurchaseOrder", ThisKey="EDIPurchaseOrderID", OtherKey="PurchaseOrderID", IsForeignKey=true)]
		public PurchaseOrder PurchaseOrder
		{
			get
			{
				return this._PurchaseOrder.Entity;
			}
			set
			{
				PurchaseOrder previousValue = this._PurchaseOrder.Entity;
				if (((previousValue != value) 
							|| (this._PurchaseOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PurchaseOrder.Entity = null;
						previousValue.PurchaseOrderRefs.Remove(this);
					}
					this._PurchaseOrder.Entity = value;
					if ((value != null))
					{
						value.PurchaseOrderRefs.Add(this);
						this._EDIPurchaseOrderID = value.PurchaseOrderID;
					}
					else
					{
						this._EDIPurchaseOrderID = default(int);
					}
					this.SendPropertyChanged("PurchaseOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
